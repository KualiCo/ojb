#<!--
#/* Copyright 2002-2004 The Apache Software Foundation
# *
# * Licensed under the Apache License, Version 2.0 (the "License");
# * you may not use this file except in compliance with the License.
# * You may obtain a copy of the License at
# *
# *     http://www.apache.org/licenses/LICENSE-2.0
# *
# * Unless required by applicable law or agreed to in writing, software
# * distributed under the License is distributed on an "AS IS" BASIS,
# * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# * See the License for the specific language governing permissions and
# * limitations under the License.
# */
#-->
# @version $Id: build.properties,v 1.1 2007-08-24 22:17:36 ewestfal Exp $
#
### ANT properties start here ###
#
# With the 'profile' property you can choose the RDBMS platform OJB is using
# implemented profiles:
#
profile=hsqldb
# use the mssqldb-JSQLConnect profile for Microsoft SQL Server and
# you will automatically JSQLConnect driver, from http://www.j-netdirect.com/
# MBAIRD: This is my driver of preference for MS SQL Server, I find the OEM'd
# MS driver to have some problems.
#profile=mssqldb-JSQLConnect
#profile=mssqldb-Opta2000
#profile=mssqldb-ms
#profile=mysql
#profile=db2
#profile=oracle
#profile=oracle9i
#profile=oracle9i-Seropto
#profile=msaccess
#profile=postgresql
#profile=informix
#profile=sybase
#profile=sapdb
#profile=maxdb
#profile=derby

###
#
# The useP6Spy switch determines if the tracing JDBC driver P6Spy is used.
# If you enable this switch, you must also edit the file
# jakarta-ojb/src/test/org/apache/ojb/spy.properties
# to tell P6Spy which JDBC driver to use and where to write the log.
# By default the HSQLDB driver is used.
#useP6Spy=true

###
# If 'true', junit tests marked as known issue in the junit-test
# source code (see OJBTestCase class for more detailed info) will be
# skipped. Default value is 'true'. For development 'false' is recommended,
# because this will show unsolved problems.
OJB.skip.issues=true

# -------------------------------------------------------------------
# You should NOT have to edit anything below here.
# -------------------------------------------------------------------

# With the 'jcdAlias' property you define a keyword for the used
# connection. All test cases use this keyword.
jcdAlias=default

###
#
# non-redistributable jars
# Certain jar files required for a full OJB build may not be shipped
# as part of the OJB distribution.
#
j2ee.jars=geronimo-spec-j2ee-1.4-rc2.jar
jdo.jars=jdo.jar:jdori.jar

# These properties tell ant what the project's directory structure is.
source=src
src.dir=src
src.java=${src.dir}/java
src.test=${src.dir}/test
src.tools=${src.dir}/tools
src.samples=samples
src.jca=${src.dir}/jca
src.doc=${src.dir}/doc
src.forrest=${src.doc}/forrest
src.javadoc=${src.doc}/javadoc
src.ojb-blank=${src.dir}/ojb-blank
src.check=${src.dir}/check
ojb=${source}/ojb
etc=${source}/etc
test=${build.dir}/test
dist=dist
lib=lib
bin=bin
doc=doc

# These properties are used by the maven build
build.dir = ${basedir}/target
build.src = ${build.dir}/src
build.srctest = ${build.dir}/srctest
build.srctools = ${build.dir}/srctools
build.srcsamples = ${build.dir}/srcsamples
build.srcjca = ${build.dir}/srcjca
build.dest = ${build.dir}/classes
build.desttest = ${build.dir}/classestest
build.desttools = ${build.dir}/classestools
build.destsamples = ${build.dir}/classessamples
build.destjca = ${build.dir}/classesjca
build.test = ${build.dir}/test
build.doc=${build.dir}/doc
build.javadoc=${build.dir}/javadoc
build.check= ${build.dir}/check
junit.dir = ${build.dir}/test/ojb
junit.fork=true

# These properties are used by torque to create the test db
torque.buildFile = build-torque.xml
torque.schema.dir = ${build.test}
torque.output.dir = ${build.test}/sql
torque.sql.dir = ${torque.output.dir}
torque.useClasspath = true
torque.project = ojbtest


# Default compilation properties.
# build.compiler=modern
deprecation=true

# ojb-blank and tutorial properties
ojb-blank.resource.includes=OJB*.properties,repository.dtd,repository_database.xml,repository_internal.xml
ojb-blank.lib.includes=antlr*.jar,commons*.jar,hsqldb*.jar,log4j*.jar,torque*.jar,velocity*.jar,xdoclet*.jar,xjavadoc*.jar

tutorial1.src.dir=${src.samples}/tutorial1/src/java
tutorial1.src.includes=org/apache/ojb/tutorial1/**
tutorial1.database.name=tutorial1
tutorial1.src-jar.name=tutorial1-src.jar
tutorial1.quickstart-jar.name=tutorial1-quickstart.jar
tutorial1.main.class=org.apache.ojb.tutorial1.Application

tutorial2.src.dir=${src.samples}/tutorial2/src/java
tutorial2.src.includes=org/apache/ojb/tutorial2/**
tutorial2.database.name=tutorial2
tutorial2.src-jar.name=tutorial2-src.jar
tutorial2.quickstart-jar.name=tutorial2-quickstart.jar
tutorial2.main.class=org.apache.ojb.tutorial2.Application

tutorial5.src.dir=${src.samples}/tutorial5/src/java
tutorial5.src.includes=org/apache/ojb/tutorial5/**
tutorial5.database.name=tutorial5
tutorial5.src-jar.name=tutorial5-src.jar
tutorial5.main.class=org.apache.ojb.tutorial5.Application

miscsamples.src.dir=${src.samples}/misc/src/java
miscsamples.src.includes=**
miscsamples.src-jar.name=misc-samples-src.jar

webapp-sample.src.dir=${src.samples}/tutorial1-struts
webapp-sample.resource.includes=OJB*.properties,repository.dtd,repository_internal.xml
webapp-sample.lib.includes=antlr*.jar,commons*.jar,hsqldb*.jar,log4j*.jar,torque*.jar,velocity*.jar,xdoclet*.jar,xjavadoc*.jar

#
# Documentation properties
#

forrest.javadoc.destdir=${build.doc}/src/documentation/content/api
forrest.staticfiles.srcdir=${src.test}/org/apache/ojb
forrest.staticfiles.destdir=${build.doc}/src/documentation/content/xdocs
forrest.output.dir=${build.doc}/build/site

javadoc.stylesheet=${src.javadoc}/javadoc.css

# api package names for javadoc generation
apipackagenames=org.apache.ojb.broker,\
org.apache.ojb.broker.accesslayer,\
org.apache.ojb.broker.accesslayer.conversions,\
org.apache.ojb.broker.core.*,\
org.apache.ojb.broker.metadata,\
org.apache.ojb.broker.metadata.fieldaccess,\
org.apache.ojb.broker.cache,\
org.apache.ojb.broker.locking,\
org.apache.ojb.broker.util,\
org.apache.ojb.broker.util.logging,\
org.apache.ojb.broker.util.sequence,\
org.apache.ojb.broker.util.collections,\
org.apache.ojb.broker.query,\
org.apache.ojb.broker.platforms,\
org.apache.ojb.broker.transaction.*,\
org.odmg,\
org.apache.ojb.odmg,\
org.apache.ojb.odmg.oql,\
org.odbms,\
org.apache.ojb.junit,\
org.apache.ojb.performance

copyright=(C) 2002 - 2005 Apache Software Foundation \
<br/>All rights reserved. Published under the Apache License 2.0. \
<br/><a href="http://db.apache.org/ojb">http://db.apache.org/ojb</a>
icon=<img src="../images/ojb-400-white.png" alt="ObJectRelationalBridge">
br=<br/>


# project name and version info
name=ObJectRelationalBridge
project-name=db-ojb
major=1
minor=0
build=4-patch6
version=${major}.${minor}.${build}
versiondate=2011-01-11
ojb-filename-prefix=${project-name}-${version}

#checkstyle.version.pattern=\\$Revision.*\\$
#checkstyle.author.pattern=\\S
checkstyle.license.file=${src.check}/license-check.txt

#
### ANT properties end here


### Preprocessor flags start here
#
# These flags are no longer needed for normal operation, as build.xml
# now detects the VM version automatically!
# but if you want to provide a jdk1.2 compliant build with a jdk 1.3
# you might still want to use these switches:
#
# set this flag to -JDK13 to turn on JDK1.2 compatibility
#JDK=+JDK13
# set this flag to +JDBC30 to turn on JDK1.4 compatibilty
#JDBC=-JDBC30
#
# currently maven cannot detect the JDK automatically,
# so we need the following hints:
ojbOnSwitches=JDK13 JDBC30
ojbOffSwitches=

#
### Preprocessor flags end here
