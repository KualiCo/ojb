CREATE SCHEMA PUBLIC AUTHORIZATION DBA
CREATE MEMORY TABLE KATEGORIEN(KATEGORIE_NR INTEGER NOT NULL PRIMARY KEY,KATEGORIENAME VARCHAR(150),BESCHREIBUNG VARCHAR(150))
CREATE MEMORY TABLE ARTIKEL(ARTIKEL_NR INTEGER NOT NULL PRIMARY KEY,ARTIKELNAME VARCHAR(150),LIEFERANTEN_NR INTEGER,KATEGORIE_NR INTEGER,LIEFEREINHEIT VARCHAR(150),EINZELPREIS FLOAT,LAGERBESTAND INTEGER,BESTELLTEEINHEITEN INTEGER,MINDESTBESTAND INTEGER,AUSLAUFARTIKEL INTEGER,CONSTRAINT ARTIKEL_FK_1 FOREIGN KEY(KATEGORIE_NR) REFERENCES KATEGORIEN(KATEGORIE_NR))
CREATE MEMORY TABLE BOOKS(ARTIKEL_NR INTEGER NOT NULL PRIMARY KEY,ARTIKELNAME VARCHAR(150),LIEFERANTEN_NR INTEGER,KATEGORIE_NR INTEGER,LIEFEREINHEIT VARCHAR(150),EINZELPREIS FLOAT,LAGERBESTAND INTEGER,BESTELLTEEINHEITEN INTEGER,MINDESTBESTAND INTEGER,AUSLAUFARTIKEL INTEGER,ISBN VARCHAR(10),AUTHOR VARCHAR(150),CONSTRAINT BOOKS_FK_1 FOREIGN KEY(KATEGORIE_NR) REFERENCES KATEGORIEN(KATEGORIE_NR))
CREATE MEMORY TABLE CDS(ARTIKEL_NR INTEGER NOT NULL PRIMARY KEY,ARTIKELNAME VARCHAR(150),LIEFERANTEN_NR INTEGER,KATEGORIE_NR INTEGER,LIEFEREINHEIT VARCHAR(150),EINZELPREIS FLOAT,LAGERBESTAND INTEGER,BESTELLTEEINHEITEN INTEGER,MINDESTBESTAND INTEGER,AUSLAUFARTIKEL INTEGER,LABEL VARCHAR(150),MUSICIANS VARCHAR(250),CONSTRAINT CDS_FK_1 FOREIGN KEY(KATEGORIE_NR) REFERENCES KATEGORIEN(KATEGORIE_NR))
CREATE MEMORY TABLE ORDER_POSITION(ID INTEGER NOT NULL PRIMARY KEY,ORDER_ID INTEGER,ARTICLE_ID INTEGER)
CREATE MEMORY TABLE TREE(ID INTEGER NOT NULL PRIMARY KEY,DATA VARCHAR(150),PARENT_ID INTEGER)
CREATE MEMORY TABLE TREEGROUP(ID INTEGER NOT NULL PRIMARY KEY,DATA VARCHAR(150),PARENT_ID INTEGER,GROUP_ID INTEGER)
CREATE MEMORY TABLE AB_TABLE(ID INTEGER NOT NULL PRIMARY KEY,CLASS_NAME VARCHAR(150),VALUE_ INTEGER,A_FIELD VARCHAR(150),B_FIELD VARCHAR(150))
CREATE MEMORY TABLE PRODUCT(ID INTEGER NOT NULL PRIMARY KEY,NAME VARCHAR(150),PRICE FLOAT,STOCK INTEGER)
CREATE MEMORY TABLE PERSON(ID INTEGER NOT NULL PRIMARY KEY,FIRSTNAME VARCHAR(150),LASTNAME VARCHAR(150))
CREATE MEMORY TABLE PROJECT(ID INTEGER NOT NULL PRIMARY KEY,TITLE VARCHAR(150),DESCRIPTION VARCHAR(250))
CREATE MEMORY TABLE PERSON_PROJECT(PERSON_ID INTEGER NOT NULL,PROJECT_ID INTEGER NOT NULL,ROLENAME VARCHAR(150),PRIMARY KEY(PERSON_ID,PROJECT_ID),CONSTRAINT PERSON_PROJECT_FK_1 FOREIGN KEY(PERSON_ID) REFERENCES PERSON(ID),CONSTRAINT PERSON_PROJECT_FK_2 FOREIGN KEY(PROJECT_ID) REFERENCES PROJECT(ID))
CREATE MEMORY TABLE TASK(TASK_ID INTEGER NOT NULL PRIMARY KEY,PERSON_ID INTEGER,PROJECT_ID INTEGER,TASKNAME VARCHAR(20))
CREATE MEMORY TABLE FAMILY_MEMBER(ID INTEGER NOT NULL PRIMARY KEY,FIRSTNAME VARCHAR(150),LASTNAME VARCHAR(150),MOTHER_ID INTEGER,FATHER_ID INTEGER)
CREATE MEMORY TABLE LOCKED_BY_VERSION(ID INTEGER NOT NULL PRIMARY KEY,VALUE_ VARCHAR(150),VERSION_ INTEGER)
CREATE MEMORY TABLE LOCKED_BY_TIMESTAMP(ID INTEGER NOT NULL PRIMARY KEY,VALUE_ VARCHAR(150),TIMESTAMP_ TIMESTAMP)
CREATE MEMORY TABLE CHARACTER_TEST(ID INTEGER NOT NULL PRIMARY KEY,CHAR_1 VARCHAR(1),CHAR_10 VARCHAR(10),VARCHAR_1 VARCHAR(1),VARCHAR_10 VARCHAR(10))
CREATE MEMORY TABLE MDTEST_MASTER(MASTERID INTEGER NOT NULL PRIMARY KEY,MASTER_TEXT VARCHAR(255))
CREATE MEMORY TABLE MDTEST_DETAIL_FKINPK(MASTERID INTEGER NOT NULL,DETAILID INTEGER NOT NULL,DETAIL_TEXT VARCHAR(255),PRIMARY KEY(MASTERID,DETAILID),CONSTRAINT MDTEST_DETAIL_FKINPK_FK_1 FOREIGN KEY(MASTERID) REFERENCES MDTEST_MASTER(MASTERID))
CREATE MEMORY TABLE MDTEST_DETAIL_FKNOPK(DETAILID INTEGER NOT NULL PRIMARY KEY,MASTERID INTEGER,DETAIL_TEXT VARCHAR(255),CONSTRAINT MDTEST_DETAIL_FKNOPK_FK_1 FOREIGN KEY(MASTERID) REFERENCES MDTEST_MASTER(MASTERID))
CREATE MEMORY TABLE POINT_TABLE(ID INTEGER NOT NULL PRIMARY KEY,X INTEGER,Y INTEGER)
CREATE MEMORY TABLE GRAPH_NODE(ID INTEGER NOT NULL PRIMARY KEY,NAME VARCHAR(150),LOCATION INTEGER)
CREATE MEMORY TABLE GRAPH_EDGE(ID INTEGER NOT NULL PRIMARY KEY,SOURCE INTEGER,SINK INTEGER)
CREATE MEMORY TABLE TESTCLASSA(ID VARCHAR(48) NOT NULL PRIMARY KEY,VALUE1 VARCHAR(150),VALUE2 VARCHAR(150),VALUE3 INTEGER,BOID VARCHAR(48))
CREATE MEMORY TABLE TESTCLASSB(ID VARCHAR(48) NOT NULL PRIMARY KEY,VALUE1 VARCHAR(150),AOID VARCHAR(48))
CREATE MEMORY TABLE RELATEDTOCONTRACT(PK VARCHAR(48) NOT NULL PRIMARY KEY,RELATEDVALUE1 VARCHAR(150),RELATEDVALUE2 INTEGER,RELATEDVALUE3 TIMESTAMP)
CREATE MEMORY TABLE CONTRACT(PK VARCHAR(48) NOT NULL PRIMARY KEY,FK_TO_RELATED VARCHAR(48),CONTRACT_VALUE1 VARCHAR(64),CONTRACT_VALUE2 INTEGER,CONTRACT_VALUE3 VARCHAR(64),CONTRACT_VALUE4 TIMESTAMP,CONSTRAINT CONTRACT_FK_1 FOREIGN KEY(FK_TO_RELATED) REFERENCES RELATEDTOCONTRACT(PK))
CREATE MEMORY TABLE VERSION(PK VARCHAR(48) NOT NULL PRIMARY KEY,FK_TO_CONTRACT VARCHAR(48),VERSION_VALUE1 VARCHAR(64),VERSION_VALUE2 INTEGER,VERSION_VALUE3 TIMESTAMP,CONSTRAINT VERSION_FK_1 FOREIGN KEY(FK_TO_CONTRACT) REFERENCES CONTRACT(PK))
CREATE MEMORY TABLE EFFECTIVENESS(PK VARCHAR(48) NOT NULL PRIMARY KEY,FK_TO_VERSION VARCHAR(48),EFF_VALUE1 VARCHAR(64),EFF_VALUE2 INTEGER,EFF_VALUE3 TIMESTAMP,CONSTRAINT EFFECTIVENESS_FK_1 FOREIGN KEY(FK_TO_VERSION) REFERENCES VERSION(PK))
CREATE MEMORY TABLE MULTIMAPPEDTABLE(ID INTEGER NOT NULL PRIMARY KEY,VALUE1 VARCHAR(64),VALUE2 INTEGER,VALUE3 TIMESTAMP,VALUE4 VARCHAR(64),VALUE5 INTEGER,VALUE6 TIMESTAMP,VALUE7 VARCHAR(64),OJBCONCRETECLASS VARCHAR(64))
CREATE MEMORY TABLE EXTENT_TEST_A(OBJ_ID INTEGER NOT NULL PRIMARY KEY,NAME VARCHAR(100))
CREATE MEMORY TABLE EXTENT_TEST_B(OBJ_ID INTEGER NOT NULL PRIMARY KEY,NAME VARCHAR(100))
CREATE MEMORY TABLE EXTENT_TEST_C(OBJ_ID INTEGER NOT NULL PRIMARY KEY,NAME VARCHAR(100))
CREATE MEMORY TABLE EXTENT_TEST_D(OBJ_ID INTEGER NOT NULL PRIMARY KEY,NAME VARCHAR(100))
CREATE MEMORY TABLE TABLE_2(PK INTEGER NOT NULL PRIMARY KEY)
CREATE MEMORY TABLE TABLE_1(PK INTEGER NOT NULL PRIMARY KEY,FK_TO_RELATED INTEGER,CONSTRAINT TABLE_1_FK_1 FOREIGN KEY(FK_TO_RELATED) REFERENCES TABLE_2(PK))
CREATE MEMORY TABLE BIDIR_A(PK VARCHAR(48) NOT NULL PRIMARY KEY,FK_TO_B VARCHAR(48))
CREATE MEMORY TABLE BIDIR_B(PK VARCHAR(48) NOT NULL PRIMARY KEY,FK_TO_A VARCHAR(48),CONSTRAINT BIDIR_B_FK_1 FOREIGN KEY(FK_TO_A) REFERENCES BIDIR_A(PK))
CREATE MEMORY TABLE ZOO(ZOOID INTEGER NOT NULL PRIMARY KEY,NAME VARCHAR(60))
CREATE MEMORY TABLE MAMMAL(ANIMALID INTEGER NOT NULL PRIMARY KEY,NAME VARCHAR(60),AGE INTEGER,NUMLEGS INTEGER,ZOOID INTEGER,CONSTRAINT MAMMAL_FK_1 FOREIGN KEY(ZOOID) REFERENCES ZOO(ZOOID))
CREATE MEMORY TABLE REPTILE(ANIMALID INTEGER NOT NULL PRIMARY KEY,NAME VARCHAR(60),AGE INTEGER,COLOR VARCHAR(60),ZOOID INTEGER,CONSTRAINT REPTILE_FK_1 FOREIGN KEY(ZOOID) REFERENCES ZOO(ZOOID))
CREATE MEMORY TABLE FISH(FOODID INTEGER NOT NULL PRIMARY KEY,NAME VARCHAR(60),CALORIES INTEGER,TYPEOFWATER VARCHAR(60))
CREATE MEMORY TABLE SALAD(FOODID INTEGER NOT NULL PRIMARY KEY,NAME VARCHAR(60),CALORIES INTEGER,COLOR VARCHAR(60))
CREATE MEMORY TABLE GOURMET(GOURMETID INTEGER NOT NULL PRIMARY KEY,NAME VARCHAR(60))
CREATE MEMORY TABLE GOURMET_FOOD(GOURMET_ID INTEGER NOT NULL,FOOD_ID INTEGER NOT NULL,PRIMARY KEY(GOURMET_ID,FOOD_ID))
CREATE MEMORY TABLE GUIDTEST(GUID_ VARCHAR(60) NOT NULL PRIMARY KEY,GUIDVALUE VARCHAR(60))
CREATE MEMORY TABLE CONV_REFERER(PK1 INTEGER NOT NULL PRIMARY KEY,REF1 INTEGER,TEST_ID INTEGER)
CREATE MEMORY TABLE CONV_REFERED(PK1 INTEGER NOT NULL PRIMARY KEY,TEST_ID INTEGER)
CREATE MEMORY TABLE SITE(ID INTEGER NOT NULL PRIMARY KEY,NAME VARCHAR(100),SITEYEAR INTEGER,SEMESTER INTEGER,CONSTRAINT SYS_CT_94 UNIQUE(NAME))
CREATE MEMORY TABLE ODMG_DLIST(ID INTEGER NOT NULL PRIMARY KEY,NAME VARCHAR(100),RND_NAME VARCHAR(100))
CREATE MEMORY TABLE ROLLBACK_ONE(OBJ_ID INTEGER NOT NULL PRIMARY KEY,NAME VARCHAR(100),DESCRIPTION VARCHAR(100))
CREATE MEMORY TABLE ROLLBACK_TWO(OBJ_ID INTEGER NOT NULL PRIMARY KEY,NAME VARCHAR(100),DESCRIPTION VARCHAR(100))
CREATE MEMORY TABLE NEWS(ID INTEGER NOT NULL PRIMARY KEY,HEADLINE VARCHAR(50))
CREATE MEMORY TABLE PAPER(ID INTEGER NOT NULL PRIMARY KEY,HEADLINE VARCHAR(50),ISSUEDATE VARCHAR(50),AUTHOR VARCHAR(50))
CREATE MEMORY TABLE TOPIC(ID INTEGER NOT NULL PRIMARY KEY,NAME VARCHAR(50),IMPORTANCE VARCHAR(50))
CREATE MEMORY TABLE TOPIC_EXT(ID INTEGER NOT NULL PRIMARY KEY,NAME VARCHAR(50),IMPORTANCE VARCHAR(50),DESCRIPTION VARCHAR(50))
CREATE MEMORY TABLE CATEGORY(ID INTEGER NOT NULL PRIMARY KEY,NAME VARCHAR(50),DESCRIPTION VARCHAR(50))
CREATE MEMORY TABLE AREA(ID INTEGER NOT NULL PRIMARY KEY,NAME VARCHAR(50),DESCRIPTION VARCHAR(50))
CREATE MEMORY TABLE CONTENT_QUALIFIER(CONTENT_ID INTEGER NOT NULL,QUALIFIER_ID INTEGER NOT NULL,PRIMARY KEY(CONTENT_ID,QUALIFIER_ID))
CREATE MEMORY TABLE SM_TAB_A(SM_ID INTEGER NOT NULL PRIMARY KEY,NAME VARCHAR(250))
CREATE MEMORY TABLE SM_TAB_AA(SM_ID INTEGER NOT NULL PRIMARY KEY,NAME VARCHAR(250))
CREATE MEMORY TABLE SM_TAB_AB(SM_ID INTEGER NOT NULL PRIMARY KEY,NAME VARCHAR(250))
CREATE MEMORY TABLE SM_TAB_AAA(SM_ID INTEGER NOT NULL PRIMARY KEY,NAME VARCHAR(250))
CREATE MEMORY TABLE SM_TAB_B(SM_ID INTEGER NOT NULL PRIMARY KEY,NAME VARCHAR(250))
CREATE MEMORY TABLE SM_TAB_BB(SM_ID INTEGER NOT NULL PRIMARY KEY,NAME VARCHAR(250))
CREATE MEMORY TABLE SM_SAME_TAB(SM_ID INTEGER NOT NULL PRIMARY KEY,NAME VARCHAR(250))
CREATE MEMORY TABLE SM_AUTO_NAMING(SM_ID INTEGER NOT NULL PRIMARY KEY,NAME VARCHAR(250))
CREATE MEMORY TABLE SM_TAB_MAX_A(SM_ID INTEGER NOT NULL PRIMARY KEY,NAME VARCHAR(250))
CREATE MEMORY TABLE SM_TAB_MAX_AA(SM_ID INTEGER NOT NULL PRIMARY KEY,NAME VARCHAR(250))
CREATE MEMORY TABLE SM_TAB_MAX_AB(SM_ID INTEGER NOT NULL PRIMARY KEY,NAME VARCHAR(250))
CREATE MEMORY TABLE SM_TAB_MAX_AAA(SM_ID INTEGER NOT NULL PRIMARY KEY,NAME VARCHAR(250))
CREATE MEMORY TABLE SM_TAB_MAX_B(SM_ID INTEGER NOT NULL PRIMARY KEY,NAME VARCHAR(250))
CREATE MEMORY TABLE SM_TAB_MAX_BB(SM_ID INTEGER NOT NULL PRIMARY KEY,NAME VARCHAR(250))
CREATE MEMORY TABLE SM_KEY(INT_KEY INTEGER NOT NULL PRIMARY KEY,NAME VARCHAR(250),STRING_KEY VARCHAR(250),LONG_KEY BIGINT,INTEGER_KEY INTEGER)
CREATE MEMORY TABLE SM_MT_TEST_A(OBJ_ID INTEGER NOT NULL PRIMARY KEY,NAME VARCHAR(100))
CREATE MEMORY TABLE SM_MT_TEST_B(OBJ_ID INTEGER NOT NULL PRIMARY KEY,NAME VARCHAR(100))
CREATE MEMORY TABLE AUTO_INCREMENT(INT_ID INTEGER,INTEGER_ID INTEGER,STR_ID VARCHAR(255))
CREATE MEMORY TABLE EJB_CATEGORY(CATEGORY_ID INTEGER NOT NULL PRIMARY KEY,CATEGORY_NAME VARCHAR(80),DESCRIPTION VARCHAR(255))
CREATE MEMORY TABLE EJB_ARTICLE(ARTICLE_ID INTEGER NOT NULL PRIMARY KEY,NAME VARCHAR(80),PRICE DECIMAL(15,2),DESCRIPTION VARCHAR(255),CATEGORY_ID INTEGER)
CREATE MEMORY TABLE EJB_PERSON(PERSON_ID INTEGER NOT NULL PRIMARY KEY,FIRST_NAME VARCHAR(80),LAST_NAME VARCHAR(80),GRADE VARCHAR(80))
CREATE MEMORY TABLE FIELD_CONVERSION_NODE(NODE_ID DECIMAL(15) NOT NULL,NODE_STATE INTEGER NOT NULL,PARENT_UID DECIMAL(15),PRIMARY KEY(NODE_ID,NODE_STATE))
CREATE MEMORY TABLE FIELD_CONVERSION_NODE_NOINC(NODE_ID DECIMAL(15) NOT NULL PRIMARY KEY)
CREATE MEMORY TABLE CONVERSION_VO(PK_WITH_AUTO INTEGER NOT NULL,PK_WITHOUT_AUTO INTEGER NOT NULL,NORMAL_WITH_AUTO INTEGER,NORMAL_WITHOUT_AUTO INTEGER,PRIMARY KEY(PK_WITH_AUTO,PK_WITHOUT_AUTO))
CREATE MEMORY TABLE NUMBER_ACCURACY_TEST(OBJ_ID INTEGER NOT NULL PRIMARY KEY,SCALE_TWO DECIMAL(15,6),SCALE_FOUR DECIMAL(15,6))
CREATE MEMORY TABLE PERF_ARTICLE(ARTICLE_ID INTEGER NOT NULL PRIMARY KEY,ARTICLE_NAME VARCHAR(150),MINIMUM_STOCK INTEGER,PRICE FLOAT,UNIT VARCHAR(20),STOCK INTEGER,SUPPLIER_ID INTEGER,PRODUCT_GROUP_ID INTEGER)
CREATE MEMORY TABLE BATCH_MAIN_OBJ(OBJ_ID BIGINT NOT NULL PRIMARY KEY,NAME VARCHAR(100))
CREATE MEMORY TABLE BATCH_SUB_OBJ(OBJ_ID BIGINT NOT NULL PRIMARY KEY,FK_MAIN_ID BIGINT,NAME VARCHAR(100),CONSTRAINT BATCH_SUB_OBJ_FK_1 FOREIGN KEY(FK_MAIN_ID) REFERENCES BATCH_MAIN_OBJ(OBJ_ID))
CREATE MEMORY TABLE CACHE_TEST(OBJ_ID INTEGER NOT NULL PRIMARY KEY,NAME VARCHAR(100))
CREATE MEMORY TABLE LOCAL_CACHE_TEST(OBJ_ID INTEGER NOT NULL PRIMARY KEY,NAME VARCHAR(100),FK_FATHER INTEGER,FK_GRANDFATHER INTEGER,FK_CHILD INTEGER,FK_GRANDCHILD INTEGER)
CREATE MEMORY TABLE REF_REPOSITORY(REP_ID INTEGER NOT NULL PRIMARY KEY,REF_FK INTEGER,REFA_FK INTEGER,REFB_FK INTEGER,ANIMAL_FK INTEGER,NAME VARCHAR(100))
CREATE MEMORY TABLE REF_REPOSITORY_FK(REP_ID INTEGER NOT NULL,REF_FK INTEGER NOT NULL,REFA_FK INTEGER NOT NULL,REFB_FK INTEGER NOT NULL,NAME VARCHAR(100),PRIMARY KEY(REP_ID,REF_FK,REFA_FK,REFB_FK))
CREATE MEMORY TABLE REF_REFERENCE(REF_ID INTEGER NOT NULL PRIMARY KEY,NAME VARCHAR(100),OJB_CONCRETE_CLASS VARCHAR(100),REF_NAME_A VARCHAR(100),REF_NAME_B VARCHAR(100))
CREATE MEMORY TABLE REF_ANIMAL(A_ID INTEGER NOT NULL PRIMARY KEY,NAME VARCHAR(100),CLASS_NAME VARCHAR(100),LENGTH_ DOUBLE)
CREATE MEMORY TABLE REF_REGION(NAME VARCHAR(150) NOT NULL,COUNTRY VARCHAR(150) NOT NULL,DESCRIPTION VARCHAR(150),PRIMARY KEY(NAME,COUNTRY))
CREATE MEMORY TABLE REF_WINE(OBJ_ID VARCHAR(100) NOT NULL PRIMARY KEY,REGION_NAME VARCHAR(150),REGION_COUNTRY VARCHAR(150),VINTAGE VARCHAR(150),GRAPE VARCHAR(150),CONSTRAINT REF_WINE_FK_1 FOREIGN KEY(REGION_NAME,REGION_COUNTRY) REFERENCES REF_REGION(NAME,COUNTRY))
CREATE MEMORY TABLE REF_OBJ_A(OBJ_ID INTEGER NOT NULL PRIMARY KEY,NAME VARCHAR(150),FK_COL_REF INTEGER,FK_REF INTEGER)
CREATE MEMORY TABLE REF_OBJ_B(OBJ_ID INTEGER NOT NULL PRIMARY KEY,NAME VARCHAR(150),FK_COL_REF INTEGER,FK_REF INTEGER)
CREATE MEMORY TABLE REF_OBJ_C(OBJ_ID INTEGER NOT NULL PRIMARY KEY,NAME VARCHAR(150),NAME_C VARCHAR(150),FK_COL_REF INTEGER,FK_REF INTEGER)
CREATE MEMORY TABLE PKFK_PERSON(OBJ_ID INTEGER NOT NULL PRIMARY KEY,NAME VARCHAR(150))
CREATE MEMORY TABLE PKFK_PERSON_DETAIL(OBJ_ID INTEGER NOT NULL PRIMARY KEY,PROFILE VARCHAR(150),FK_GENDER VARCHAR(150))
CREATE MEMORY TABLE PKFK_GENDER(TYPE VARCHAR(150) NOT NULL PRIMARY KEY)
CREATE MEMORY TABLE READTEST_ACCOUNT(OJB_ID INTEGER NOT NULL PRIMARY KEY,NAME VARCHAR(150),FK_REF INTEGER)
CREATE MEMORY TABLE READTEST_BUYER(OJB_ID INTEGER NOT NULL PRIMARY KEY,NAME VARCHAR(150),FK_REF INTEGER)
CREATE MEMORY TABLE READTEST_INVOICE(OJB_ID INTEGER NOT NULL PRIMARY KEY,NAME VARCHAR(150),INVOICE_NUMBER VARCHAR(150),FK_REF INTEGER)
CREATE MEMORY TABLE READTEST_ARTICLE(OJB_ID INTEGER NOT NULL PRIMARY KEY,NAME VARCHAR(150),DESCRIPTION VARCHAR(150),FK_REF INTEGER)
CREATE MEMORY TABLE READTEST_ADDRESS(OJB_ID INTEGER NOT NULL PRIMARY KEY,NAME VARCHAR(150),FK_REF INTEGER)
CREATE MEMORY TABLE READTEST_ADDRESS_TYPE(OJB_ID INTEGER NOT NULL PRIMARY KEY,NAME VARCHAR(150),FK_REF INTEGER)
CREATE MEMORY TABLE M2N_ACTOR(OBJ_ID INTEGER NOT NULL,OBJ_ID2 INTEGER NOT NULL,NAME VARCHAR(150),PRIMARY KEY(OBJ_ID,OBJ_ID2))
CREATE MEMORY TABLE M2N_MOVIE(OBJ_ID_INT INTEGER NOT NULL,OBJ_ID2_INT INTEGER NOT NULL,OBJ_ID_STR VARCHAR(150) NOT NULL,TITLE VARCHAR(150),DESCRIPTION VARCHAR(250),PRIMARY KEY(OBJ_ID_INT,OBJ_ID2_INT,OBJ_ID_STR))
CREATE MEMORY TABLE M2N_ROLE(ACTOR_ID INTEGER NOT NULL,ACTOR_ID2 INTEGER NOT NULL,MOVIE_ID_INT INTEGER NOT NULL,MOVIE_ID2_INT INTEGER NOT NULL,MOVIE_ID_STR VARCHAR(150) NOT NULL,PRIMARY KEY(ACTOR_ID,ACTOR_ID2,MOVIE_ID_INT,MOVIE_ID2_INT,MOVIE_ID_STR),CONSTRAINT M2N_ROLE_FK_1 FOREIGN KEY(ACTOR_ID,ACTOR_ID2) REFERENCES M2N_ACTOR(OBJ_ID,OBJ_ID2),CONSTRAINT M2N_ROLE_FK_2 FOREIGN KEY(MOVIE_ID_INT,MOVIE_ID2_INT,MOVIE_ID_STR) REFERENCES M2N_MOVIE(OBJ_ID_INT,OBJ_ID2_INT,OBJ_ID_STR))
CREATE MEMORY TABLE M2N_ROLE_2(ACTOR_ID INTEGER NOT NULL,ACTOR_ID2 INTEGER NOT NULL,MOVIE_ID_INT INTEGER NOT NULL,MOVIE_ID2_INT INTEGER NOT NULL,MOVIE_ID_STR VARCHAR(150) NOT NULL,PRIMARY KEY(ACTOR_ID,ACTOR_ID2,MOVIE_ID_INT,MOVIE_ID2_INT,MOVIE_ID_STR),CONSTRAINT M2N_ROLE_2_FK_1 FOREIGN KEY(ACTOR_ID,ACTOR_ID2) REFERENCES M2N_ACTOR(OBJ_ID,OBJ_ID2),CONSTRAINT M2N_ROLE_2_FK_2 FOREIGN KEY(MOVIE_ID_INT,MOVIE_ID2_INT,MOVIE_ID_STR) REFERENCES M2N_MOVIE(OBJ_ID_INT,OBJ_ID2_INT,OBJ_ID_STR))
CREATE MEMORY TABLE M2N_PRODUCER(ID_ INTEGER NOT NULL,ID_STR VARCHAR(150) NOT NULL,NAME VARCHAR(150),PRIMARY KEY(ID_,ID_STR))
CREATE MEMORY TABLE M2N_MOVIE_PRODUCER(PRODUCER_ID INTEGER NOT NULL,MOVIE_ID_INT INTEGER NOT NULL,MOVIE_ID2_INT INTEGER NOT NULL,ID_STR_SHARED VARCHAR(150) NOT NULL,PRIMARY KEY(PRODUCER_ID,MOVIE_ID_INT,MOVIE_ID2_INT,ID_STR_SHARED))
CREATE MEMORY TABLE M2N_OFFICE(OBJ_ID INTEGER NOT NULL PRIMARY KEY,NAME VARCHAR(150))
CREATE MEMORY TABLE M2N_OFFICE_COUNTY(OFFICE_ID INTEGER NOT NULL,COUNTY_ID VARCHAR(150) NOT NULL,PRIMARY KEY(OFFICE_ID,COUNTY_ID))
CREATE MEMORY TABLE M2N_COUNTY(OBJ_ID VARCHAR(150) NOT NULL PRIMARY KEY,NAME VARCHAR(150))
CREATE MEMORY TABLE M2N_NODE(OBJ_ID INTEGER NOT NULL PRIMARY KEY,NAME VARCHAR(150))
CREATE MEMORY TABLE M2N_KINDSHIP(PARENT_ID INTEGER NOT NULL,CHILD_ID INTEGER NOT NULL,PRIMARY KEY(PARENT_ID,CHILD_ID))
CREATE MEMORY TABLE COL_GATHERER(GAT_ID INTEGER NOT NULL PRIMARY KEY,NAME VARCHAR(150))
CREATE MEMORY TABLE COL_COLLECTIBLE_A(COL_ID INTEGER NOT NULL PRIMARY KEY,NAME VARCHAR(150),GAT_ID INTEGER,CONSTRAINT COL_COLLECTIBLE_A_FK_1 FOREIGN KEY(GAT_ID) REFERENCES COL_GATHERER(GAT_ID))
CREATE MEMORY TABLE COL_COLLECTIBLE_BASE(COL_ID INTEGER NOT NULL PRIMARY KEY,NAME VARCHAR(150),GAT_ID INTEGER,CONSTRAINT COL_COLLECTIBLE_BASE_FK_1 FOREIGN KEY(GAT_ID) REFERENCES COL_GATHERER(GAT_ID))
CREATE MEMORY TABLE COL_COLLECTIBLE_B(COL_ID INTEGER NOT NULL PRIMARY KEY,NAME VARCHAR(150),GAT_ID INTEGER,CONSTRAINT COL_COLLECTIBLE_B_FK_1 FOREIGN KEY(GAT_ID) REFERENCES COL_GATHERER(GAT_ID))
CREATE MEMORY TABLE COL_COLLECTIBLE_C(COL_ID INTEGER NOT NULL PRIMARY KEY,NAME VARCHAR(150),GAT_ID INTEGER,EXTENT_NAME VARCHAR(150),CONSTRAINT COL_COLLECTIBLE_C_FK_1 FOREIGN KEY(GAT_ID) REFERENCES COL_GATHERER(GAT_ID))
CREATE MEMORY TABLE COL_COLLECTIBLE_CC(COL_ID INTEGER NOT NULL PRIMARY KEY,NAME VARCHAR(150),GAT_ID INTEGER,EXTENT_NAME VARCHAR(150),CONSTRAINT COL_COLLECTIBLE_CC_FK_1 FOREIGN KEY(GAT_ID) REFERENCES COL_GATHERER(GAT_ID))
CREATE MEMORY TABLE COL_COLLECTIBLE_C2(COL_ID INTEGER NOT NULL PRIMARY KEY,NAME VARCHAR(150),GAT_ID INTEGER,EXTENT_NAME VARCHAR(150),CONSTRAINT COL_COLLECTIBLE_C2_FK_1 FOREIGN KEY(GAT_ID) REFERENCES COL_GATHERER(GAT_ID))
CREATE MEMORY TABLE COL_COLLECTIBLE_D(COL_ID INTEGER NOT NULL PRIMARY KEY,NAME VARCHAR(150),OJB_CONCRETE_CLASS VARCHAR(150),GAT_ID INTEGER,CONSTRAINT COL_COLLECTIBLE_D_FK_1 FOREIGN KEY(GAT_ID) REFERENCES COL_GATHERER(GAT_ID))
CREATE MEMORY TABLE COL_2_PROJECT(PRO_ID INTEGER NOT NULL PRIMARY KEY,NAME VARCHAR(150))
CREATE MEMORY TABLE COL_2_SUB_PROJECT(SUB_ID INTEGER NOT NULL PRIMARY KEY,NAME VARCHAR(150),FK_PRO_ID INTEGER,CONSTRAINT COL_2_SUB_PROJECT_FK_1 FOREIGN KEY(FK_PRO_ID) REFERENCES COL_2_PROJECT(PRO_ID))
CREATE MEMORY TABLE COL_2_DEVELOPER(DEV_ID INTEGER NOT NULL PRIMARY KEY,NAME VARCHAR(150),FK_PRO_ID INTEGER,CONSTRAINT COL_2_DEVELOPER_FK_1 FOREIGN KEY(FK_PRO_ID) REFERENCES COL_2_PROJECT(PRO_ID))
CREATE MEMORY TABLE PB_AWARE_OBJECT(ID_ INTEGER NOT NULL PRIMARY KEY,NAME VARCHAR(150),FK_REF INTEGER)
CREATE MEMORY TABLE PB_AWARE_REF(ID_ INTEGER NOT NULL PRIMARY KEY,NAME VARCHAR(150))
CREATE MEMORY TABLE PB_AWARE_COLL(ID_ INTEGER NOT NULL PRIMARY KEY,FK_PB_AWARE INTEGER,NAME VARCHAR(150))
CREATE MEMORY TABLE READONLY_TEST(OBJ_ID DECIMAL(15) NOT NULL PRIMARY KEY,NAME VARCHAR(150),RO_STRING VARCHAR(150),RO_LONG DECIMAL(15))
CREATE MEMORY TABLE TABLE_E(ID INTEGER NOT NULL PRIMARY KEY,SOMESUPERVALUE INTEGER)
CREATE MEMORY TABLE TABLE_F(ID INTEGER NOT NULL PRIMARY KEY,E_ID INTEGER,SOMEVALUE INTEGER,CONSTRAINT TABLE_F_FK_1 FOREIGN KEY(E_ID) REFERENCES TABLE_E(ID))
CREATE MEMORY TABLE TABLE_G(ID INTEGER NOT NULL PRIMARY KEY,F_ID INTEGER,SOMESUBVALUE INTEGER,CONSTRAINT TABLE_G_FK_1 FOREIGN KEY(F_ID) REFERENCES TABLE_F(ID))
CREATE MEMORY TABLE TABLE_F1(ID INTEGER NOT NULL PRIMARY KEY,SOMEVALUE INTEGER,CONSTRAINT TABLE_F1_FK_1 FOREIGN KEY(ID) REFERENCES TABLE_E(ID))
CREATE MEMORY TABLE TABLE_G1(ID INTEGER NOT NULL PRIMARY KEY,SOMESUBVALUE INTEGER,CONSTRAINT TABLE_G1_FK_1 FOREIGN KEY(ID) REFERENCES TABLE_F1(ID))
CREATE MEMORY TABLE ABSTRACT_COL_Z(OBJ_ID INTEGER NOT NULL PRIMARY KEY,CONTAINER_ID INTEGER,NAME VARCHAR(150),SOMEVALUE INTEGER)
CREATE MEMORY TABLE ABSTRACT_COL_ZZ(OBJ_ID INTEGER NOT NULL PRIMARY KEY,CONTAINER_ID INTEGER,NAME VARCHAR(150),ZZ_NAME VARCHAR(150),SOMEVALUE INTEGER)
CREATE MEMORY TABLE XCONTAINER(OBJ_ID INTEGER NOT NULL PRIMARY KEY)
CREATE MEMORY TABLE COL_BOOKSHELFS(PK INTEGER NOT NULL PRIMARY KEY,NAME VARCHAR(100))
CREATE MEMORY TABLE COL_BOOKS(PK INTEGER NOT NULL,NAME VARCHAR(100),BOOKSHELF_FK INTEGER NOT NULL,PRIMARY KEY(PK,BOOKSHELF_FK))
CREATE MEMORY TABLE COL_DVDS(PK INTEGER NOT NULL,NAME VARCHAR(100),BOOKSHELF_FK INTEGER NOT NULL,PRIMARY KEY(PK,BOOKSHELF_FK))
CREATE MEMORY TABLE COL_CANDIES(PK INTEGER NOT NULL,NAME VARCHAR(150),INGREDIENTS VARCHAR(250),BOOKSHELF_FK INTEGER NOT NULL,PRIMARY KEY(PK,BOOKSHELF_FK))
CREATE MEMORY TABLE NESTED_FIELDS_TAB(OBJ_ID DECIMAL(15) NOT NULL PRIMARY KEY,NAME VARCHAR(150),NESTED_VALUE VARCHAR(150),NESTED_DESCRIPTION VARCHAR(150))
CREATE MEMORY TABLE NESTED_FIELDS_ENTRY(OBJ_ID INTEGER NOT NULL PRIMARY KEY,FK_ID DECIMAL(15),NAME VARCHAR(150))
CREATE MEMORY TABLE TAB_COMPONENT(PK_ID INTEGER NOT NULL PRIMARY KEY,NAME VARCHAR(150),PARENT_ID INTEGER,CHILD_ID INTEGER,GROUP_ID INTEGER)
CREATE MEMORY TABLE TAB_GROUP(PK_ID INTEGER NOT NULL PRIMARY KEY,NAME VARCHAR(150))
CREATE MEMORY TABLE INHERITANCE_COMPANY(OBJ_ID DECIMAL(15) NOT NULL PRIMARY KEY,NAME VARCHAR(150))
CREATE MEMORY TABLE INHERITANCE_ADDRESS(OBJ_ID INTEGER NOT NULL PRIMARY KEY,STREET VARCHAR(150),FK_EMPLOYEE_1 INTEGER,FK_EMPLOYEE_2 DECIMAL(15))
CREATE MEMORY TABLE INHERITANCE_EMPLOYEE(OBJ_ID INTEGER NOT NULL,OBJ_ID_2 DECIMAL(15) NOT NULL,NAME VARCHAR(150),FK_ADDRESS INTEGER,PRIMARY KEY(OBJ_ID,OBJ_ID_2),CONSTRAINT INHERITANCE_EMPLOYEE_FK_1 FOREIGN KEY(FK_ADDRESS) REFERENCES INHERITANCE_ADDRESS(OBJ_ID))
CREATE MEMORY TABLE INHERITANCE_EXECUTIVE(OBJ_ID INTEGER NOT NULL,OBJ_ID_2 DECIMAL(15) NOT NULL,SUPER_ID INTEGER,SUPER_ID_2 DECIMAL(15),MANAGER_ID INTEGER,MANAGER_ID_2 DECIMAL(15),DEPARTMENT VARCHAR(150),PRIMARY KEY(OBJ_ID,OBJ_ID_2),CONSTRAINT INHERITANCE_EXECUTIVE_FK_1 FOREIGN KEY(SUPER_ID,SUPER_ID_2) REFERENCES INHERITANCE_EMPLOYEE(OBJ_ID,OBJ_ID_2))
CREATE MEMORY TABLE INHERITANCE_MANAGER(OBJ_ID INTEGER NOT NULL,OBJ_ID_2 DECIMAL(15) NOT NULL,FK_CONSORTIUM INTEGER,SUPER_ID INTEGER,SUPER_ID_2 DECIMAL(15),PRIMARY KEY(OBJ_ID,OBJ_ID_2),CONSTRAINT INHERITANCE_MANAGER_FK_1 FOREIGN KEY(SUPER_ID,SUPER_ID_2) REFERENCES INHERITANCE_EXECUTIVE(OBJ_ID,OBJ_ID_2))
CREATE MEMORY TABLE INHERITANCE_SHAREHOLDER(OBJ_ID INTEGER NOT NULL,OBJ_ID_2 DECIMAL(15) NOT NULL,SHARE_ INTEGER,SUPER_ID INTEGER,SUPER_ID_2 DECIMAL(15),PRIMARY KEY(OBJ_ID,OBJ_ID_2),CONSTRAINT INHERITANCE_SHAREHOLDER_FK_1 FOREIGN KEY(SUPER_ID,SUPER_ID_2) REFERENCES INHERITANCE_MANAGER(OBJ_ID,OBJ_ID_2))
CREATE MEMORY TABLE INHERITANCE_EMPLOYEE_ADDRESS(EMPLOYEE_ID_1 INTEGER NOT NULL,EMPLOYEE_ID_2 DECIMAL(15) NOT NULL,ADDRESS_ID INTEGER NOT NULL,PRIMARY KEY(EMPLOYEE_ID_1,EMPLOYEE_ID_2,ADDRESS_ID))
CREATE MEMORY TABLE INHERITANCE_CONSORTIUM(OBJ_ID INTEGER NOT NULL PRIMARY KEY,NAME VARCHAR(150))
CREATE MEMORY TABLE INHERITANCE_ENTITY(OBJ_ID INTEGER NOT NULL PRIMARY KEY,NAME VARCHAR(150))
CREATE MEMORY TABLE INHERITANCE_ANIMAL(OBJ_ID INTEGER NOT NULL PRIMARY KEY,WEIGHT INTEGER,NAME VARCHAR(150),FK_PARENT INTEGER)
CREATE MEMORY TABLE INHERITANCE_DOG(OBJ_ID INTEGER NOT NULL PRIMARY KEY,LEGS INTEGER)
CREATE MEMORY TABLE INHERITANCE_FOOD(OBJ_ID INTEGER NOT NULL PRIMARY KEY,FK_ANIMAL INTEGER)
CREATE MEMORY TABLE RUNTIME_SETTING_ONE(OBJ_ID INTEGER NOT NULL PRIMARY KEY,NAME VARCHAR(150))
CREATE MEMORY TABLE RUNTIME_SETTING_MAIN(OBJ_ID INTEGER NOT NULL PRIMARY KEY,NAME VARCHAR(150),FK_REF INTEGER,CONSTRAINT RUNTIME_SETTING_MAIN_FK_1 FOREIGN KEY(FK_REF) REFERENCES RUNTIME_SETTING_ONE(OBJ_ID))
CREATE MEMORY TABLE RUNTIME_SETTING_MANY(OBJ_ID INTEGER NOT NULL PRIMARY KEY,NAME VARCHAR(150),FK_MAIN INTEGER,CONSTRAINT RUNTIME_SETTING_MANY_FK_1 FOREIGN KEY(FK_MAIN) REFERENCES RUNTIME_SETTING_MAIN(OBJ_ID))
CREATE MEMORY TABLE MULTIPLE_OBJECT(OBJ_ID INTEGER NOT NULL PRIMARY KEY,NAME VARCHAR(150))
CREATE MEMORY TABLE LOCK_MULTI(OJB_ID INTEGER NOT NULL PRIMARY KEY,VERSION INTEGER,REF_ID INTEGER,NAME VARCHAR(250))
CREATE MEMORY TABLE LOCK_MULTI_REF(OJB_ID INTEGER NOT NULL PRIMARY KEY,NAME VARCHAR(250),VERSION INTEGER)
CREATE MEMORY TABLE IC_BOOK(OJB_ID INTEGER NOT NULL PRIMARY KEY,TITLE VARCHAR(250),P_DATE TIMESTAMP,COVER LONGVARBINARY,PUBLISHER_FK INTEGER,OJB_VERSION INTEGER)
CREATE MEMORY TABLE IC_AUTHOR(OJB_ID INTEGER NOT NULL PRIMARY KEY,NAME VARCHAR(250),OJB_VERSION INTEGER)
CREATE MEMORY TABLE IC_PUBLISHER(OJB_ID INTEGER NOT NULL PRIMARY KEY,NAME VARCHAR(250),OJB_VERSION INTEGER)
CREATE MEMORY TABLE IC_PUBLICATION(BOOK_ID INTEGER NOT NULL,AUTHOR_ID INTEGER NOT NULL,PRIMARY KEY(BOOK_ID,AUTHOR_ID))
CREATE MEMORY TABLE IC_REVIEW(OJB_ID INTEGER NOT NULL PRIMARY KEY,SUMMARY VARCHAR(250),FK_BOOK INTEGER,OJB_VERSION INTEGER,AUTHOR_FK INTEGER)
CREATE MEMORY TABLE CT_DETAIL(OBJ_ID INTEGER NOT NULL PRIMARY KEY,NAME VARCHAR(250),SHOP_FK INTEGER)
CREATE MEMORY TABLE CT_SHOP(OBJ_ID INTEGER NOT NULL PRIMARY KEY,NAME VARCHAR(250),DETAIL_FK INTEGER,CONSTRAINT CT_SHOP_FK_1 FOREIGN KEY(DETAIL_FK) REFERENCES CT_DETAIL(OBJ_ID))
CREATE MEMORY TABLE CT_DISTRIBUTOR(OBJ_ID INTEGER NOT NULL PRIMARY KEY,NAME VARCHAR(250))
CREATE MEMORY TABLE CT_PRODUCT(OBJ_ID INTEGER NOT NULL PRIMARY KEY,NAME VARCHAR(250),SHOP_FK INTEGER,SUB_PRODUCT_FK INTEGER,CONSTRAINT CT_PRODUCT_FK_1 FOREIGN KEY(SUB_PRODUCT_FK) REFERENCES CT_PRODUCT(OBJ_ID),CONSTRAINT CT_PRODUCT_FK_2 FOREIGN KEY(SHOP_FK) REFERENCES CT_SHOP(OBJ_ID))
CREATE MEMORY TABLE CT_SHOP_DISTRIBUTOR(SHOP_ID INTEGER,DISTRIBUTOR_ID INTEGER,CONSTRAINT CT_SHOP_DISTRIBUTOR_FK_1 FOREIGN KEY(SHOP_ID) REFERENCES CT_SHOP(OBJ_ID),CONSTRAINT CT_SHOP_DISTRIBUTOR_FK_2 FOREIGN KEY(DISTRIBUTOR_ID) REFERENCES CT_DISTRIBUTOR(OBJ_ID))
CREATE MEMORY TABLE CT_OBJECT_AAAA(OBJ_ID INTEGER NOT NULL PRIMARY KEY,NAME VARCHAR(250),FK_ID INTEGER)
CREATE MEMORY TABLE CT_OBJECT_AAA(OBJ_ID INTEGER NOT NULL PRIMARY KEY,NAME VARCHAR(250),FK_ID INTEGER,FK_ID_A INTEGER,CONSTRAINT CT_OBJECT_AAA_FK_1 FOREIGN KEY(FK_ID) REFERENCES CT_OBJECT_AAAA(OBJ_ID))
CREATE MEMORY TABLE CT_OBJECT_AA(OBJ_ID INTEGER NOT NULL PRIMARY KEY,NAME VARCHAR(250),FK_ID INTEGER,CONSTRAINT CT_OBJECT_AA_FK_1 FOREIGN KEY(FK_ID) REFERENCES CT_OBJECT_AAA(OBJ_ID))
CREATE MEMORY TABLE CT_OBJECT_A(OBJ_ID INTEGER NOT NULL PRIMARY KEY,NAME VARCHAR(250),FK_ID INTEGER,CONSTRAINT CT_OBJECT_A_FK_1 FOREIGN KEY(FK_ID) REFERENCES CT_OBJECT_AA(OBJ_ID))
CREATE MEMORY TABLE CRT_EMPLOYEE(EMPLOYEE_ID INTEGER NOT NULL PRIMARY KEY,NAME VARCHAR(150))
CREATE MEMORY TABLE CRT_MEMBER(ROLE_ID INTEGER NOT NULL PRIMARY KEY,EMPLOYEE_ID INTEGER,NAME VARCHAR(150),CONSTRAINT CRT_MEMBER_FK_1 FOREIGN KEY(EMPLOYEE_ID) REFERENCES CRT_EMPLOYEE(EMPLOYEE_ID))
CREATE MEMORY TABLE CRT_LEADER(ROLE_ID INTEGER NOT NULL PRIMARY KEY,EMPLOYEE_ID INTEGER,NAME VARCHAR(150),CONSTRAINT CRT_LEADER_FK_1 FOREIGN KEY(EMPLOYEE_ID) REFERENCES CRT_EMPLOYEE(EMPLOYEE_ID))
CREATE MEMORY TABLE CRT_PROJECT(PROJECT_ID INTEGER NOT NULL PRIMARY KEY,ENGINEER_ID INTEGER,NAME VARCHAR(150),CONSTRAINT CRT_PROJECT_FK_1 FOREIGN KEY(ENGINEER_ID) REFERENCES CRT_LEADER(ROLE_ID))
CREATE MEMORY TABLE CRT_SUB_PROJECT(SUB_ID INTEGER NOT NULL PRIMARY KEY,PROJECT_ID INTEGER,TUTOR_ID INTEGER,NAME VARCHAR(150),CONSTRAINT CRT_SUB_PROJECT_FK_1 FOREIGN KEY(PROJECT_ID) REFERENCES CRT_PROJECT(PROJECT_ID),CONSTRAINT CRT_SUB_PROJECT_FK_2 FOREIGN KEY(TUTOR_ID) REFERENCES CRT_MEMBER(ROLE_ID))
CREATE MEMORY TABLE OTM_ADDRESS(ID INTEGER NOT NULL PRIMARY KEY,COUNTRY VARCHAR(60),CITY VARCHAR(60),STREET VARCHAR(60))
CREATE MEMORY TABLE OTM_PERSON(ID INTEGER NOT NULL PRIMARY KEY,FIRSTNAME VARCHAR(60),LASTNAME VARCHAR(60),MAIN_ADDRESS_ID INTEGER,CONSTRAINT OTM_PERSON_FK_1 FOREIGN KEY(MAIN_ADDRESS_ID) REFERENCES OTM_ADDRESS(ID))
CREATE MEMORY TABLE OTM_ADDRESS_DESC(ID INTEGER NOT NULL PRIMARY KEY,DESCRIPTION VARCHAR(60),PERSON_ID INTEGER,ADDRESS_ID INTEGER,CONSTRAINT OTM_ADDRESS_DESC_FK_1 FOREIGN KEY(ADDRESS_ID) REFERENCES OTM_ADDRESS(ID),CONSTRAINT OTM_ADDRESS_DESC_FK_2 FOREIGN KEY(PERSON_ID) REFERENCES OTM_PERSON(ID))
CREATE MEMORY TABLE OTM_PERSON2(ID INTEGER NOT NULL PRIMARY KEY,NAME VARCHAR(60))
CREATE MEMORY TABLE OTM_PERSON3(ID INTEGER NOT NULL PRIMARY KEY,NAME VARCHAR(60))
CREATE MEMORY TABLE OTM_ADDRESS2(ID INTEGER NOT NULL PRIMARY KEY,PERSON_ID INTEGER)
CREATE MEMORY TABLE OTM_DEBITOR(ID INTEGER NOT NULL PRIMARY KEY,PERSON_ID INTEGER)
CREATE MEMORY TABLE P_A_TABLE(ID BIGINT NOT NULL PRIMARY KEY,A_ATTRIB INTEGER)
CREATE MEMORY TABLE P_B_TABLE(ID BIGINT NOT NULL PRIMARY KEY,B_ATTRIB INTEGER,A_ID BIGINT,CONSTRAINT P_B_TABLE_FK_1 FOREIGN KEY(A_ID) REFERENCES P_A_TABLE(ID))
CREATE MEMORY TABLE P_C_TABLE(ID BIGINT NOT NULL PRIMARY KEY,C_ATTRIB INTEGER,C1_ATTRIB INTEGER,B_ID BIGINT,D_ID BIGINT,CONSTRAINT P_C_TABLE_FK_1 FOREIGN KEY(B_ID) REFERENCES P_B_TABLE(ID))
CREATE MEMORY TABLE P_D_TABLE(ID BIGINT NOT NULL PRIMARY KEY,D_ATTRIB INTEGER)
CREATE MEMORY TABLE EMPTY_TABLE(ID_ INTEGER NOT NULL PRIMARY KEY,NAME VARCHAR(250))
CREATE MEMORY TABLE OJB_HL_SEQ(TABLENAME VARCHAR(250) NOT NULL PRIMARY KEY,MAX_KEY BIGINT,GRAB_SIZE INTEGER,VERSION INTEGER)
CREATE MEMORY TABLE OJB_NRM(NAME VARCHAR(250) NOT NULL PRIMARY KEY,OID_ LONGVARBINARY)
CREATE MEMORY TABLE OJB_DLIST(ID INTEGER NOT NULL PRIMARY KEY,SIZE_ INTEGER)
CREATE MEMORY TABLE OJB_DLIST_ENTRIES(ID INTEGER NOT NULL PRIMARY KEY,DLIST_ID INTEGER,POSITION_ INTEGER,OID_ LONGVARBINARY)
CREATE MEMORY TABLE OJB_DSET(ID INTEGER NOT NULL PRIMARY KEY,SIZE_ INTEGER)
CREATE MEMORY TABLE OJB_DSET_ENTRIES(ID INTEGER NOT NULL PRIMARY KEY,DLIST_ID INTEGER,POSITION_ INTEGER,OID_ LONGVARBINARY)
CREATE MEMORY TABLE OJB_DMAP(ID INTEGER NOT NULL PRIMARY KEY,SIZE_ INTEGER)
CREATE MEMORY TABLE OJB_DMAP_ENTRIES(ID INTEGER NOT NULL PRIMARY KEY,DMAP_ID INTEGER,KEY_OID LONGVARBINARY,VALUE_OID LONGVARBINARY)
CREATE USER SA PASSWORD ""
GRANT DBA TO SA
SET WRITE_DELAY 20
SET SCHEMA PUBLIC
INSERT INTO KATEGORIEN VALUES(1,'Beverages','Alles leckere zum S\u00fcffeln')
INSERT INTO KATEGORIEN VALUES(2,'Spices','Gew\u00fcrze, Dressings etc.')
INSERT INTO KATEGORIEN VALUES(3,'Meat','')
INSERT INTO KATEGORIEN VALUES(4,'Liquors','')
INSERT INTO KATEGORIEN VALUES(5,'Books','Strange Books...')
INSERT INTO KATEGORIEN VALUES(6,'bread','')
INSERT INTO KATEGORIEN VALUES(7,'Fruits','Fr\u00fcchte etc.')
INSERT INTO KATEGORIEN VALUES(8,'Dairy Products','Kat 8')
INSERT INTO KATEGORIEN VALUES(4711,'Random Articles','Used for MetadataMultithreadedTest')
INSERT INTO ARTIKEL VALUES(1,'Chai',1,1,'10 boxes x 20 bags',18.53E0,39,0,10,0)
INSERT INTO ARTIKEL VALUES(2,'Chang',1,1,'24 - 12 oz bottles',19.89E0,17,40,25,0)
INSERT INTO ARTIKEL VALUES(3,'Aniseed Syrup',1,2,'12 - 550 ml bottles',10.2E0,13,70,25,0)
INSERT INTO ARTIKEL VALUES(4,'Chef Antons Cajun Seasoning',2,2,'48 - 6 oz jars',22.0E0,53,0,0,0)
INSERT INTO ARTIKEL VALUES(5,'Chef Anton\u00b4s Gumbo Mix',2,2,'36 boxes',21.35E0,0,0,0,1)
INSERT INTO ARTIKEL VALUES(6,'Grandma\u00b4s Boysenberry Spread',3,2,'12 - 8 oz jars',25.0E0,120,0,25,0)
INSERT INTO ARTIKEL VALUES(7,'Uncle Bob\u00b4s Organic Dried Pears',3,7,'12 - 1 lb pkgs.',30.0E0,15,0,10,0)
INSERT INTO ARTIKEL VALUES(8,'Northwoods Cranberry Sauce',3,2,'12 - 12 oz jars',40.0E0,6,0,0,0)
INSERT INTO ARTIKEL VALUES(9,'Mishi Kobe Niku',4,6,'18 - 500 g pkgs.',97.0E0,29,0,0,1)
INSERT INTO ARTIKEL VALUES(10,'Ikura',4,8,'12 - 200 ml jars',31.0E0,31,0,0,0)
INSERT INTO ARTIKEL VALUES(11,'Queso Cabrales',5,4,'1 kg pkg.',21.0E0,22,30,30,0)
INSERT INTO ARTIKEL VALUES(12,'Queso Manchego La Pastora',5,4,'10 - 500 g pkgs.',38.0E0,86,0,0,0)
INSERT INTO ARTIKEL VALUES(13,'Konbu',6,8,'2 kg box',6.0E0,24,0,5,0)
INSERT INTO ARTIKEL VALUES(14,'Tofu',6,7,'40 - 100 g pkgs.',23.25E0,35,0,0,0)
INSERT INTO ARTIKEL VALUES(15,'Genen Shouyu',6,2,'24 - 250 ml bottles',15.5E0,39,0,5,0)
INSERT INTO ARTIKEL VALUES(16,'Pavlova',7,3,'32 - 500 g boxes',17.45E0,29,0,10,0)
INSERT INTO ARTIKEL VALUES(17,'Alice Mutton',7,6,'20 - 1 kg tins',39.0E0,0,0,0,1)
INSERT INTO ARTIKEL VALUES(18,'Carnarvon Tigers',7,8,'16 kg pkg.',62.5E0,42,0,0,0)
INSERT INTO ARTIKEL VALUES(19,'Teatime Chocolate Biscuits',8,3,'10 boxes x 12 pieces',9.2E0,25,0,5,0)
INSERT INTO ARTIKEL VALUES(20,'Sir Rodney\u00b4s Marmalade',8,3,'30 gift boxes',81.0E0,40,0,0,0)
INSERT INTO ARTIKEL VALUES(21,'Sir Rodney\u00b4s Scones',8,3,'24 pkgs. x 4 pieces',10.0E0,3,40,5,0)
INSERT INTO ARTIKEL VALUES(22,'Gustaf\u00b4s Kn\u00e4ckebr\u00f6d',9,5,'24 - 500 g pkgs.',21.0E0,104,0,25,0)
INSERT INTO ARTIKEL VALUES(23,'Tunnbr\u00f6d',9,5,'12 - 250 g pkgs.',9.0E0,61,0,25,0)
INSERT INTO ARTIKEL VALUES(24,'Guaran\u00e1 Fant\u00e1stica',10,1,'12 - 355 ml cans',4.5E0,20,0,0,1)
INSERT INTO ARTIKEL VALUES(25,'NuNuCa Nu\u00df-Nougat-Creme',11,3,'20 - 450 g glasses',14.0E0,76,0,30,0)
INSERT INTO ARTIKEL VALUES(26,'Gumb\u00e4r Gummib\u00e4rchen',11,3,'100 - 250 g bags',31.23E0,15,0,0,0)
INSERT INTO ARTIKEL VALUES(27,'Schoggi Schokolade',11,3,'100 - 100 g pieces',43.9E0,49,0,30,0)
INSERT INTO ARTIKEL VALUES(28,'R\u00f6ssle Sauerkraut',12,7,'25 - 825 g cans',45.6E0,26,0,0,1)
INSERT INTO ARTIKEL VALUES(29,'Th\u00fcringer Rostbratwurst',12,6,'50 bags x 30 sausgs.',123.79E0,0,0,0,1)
INSERT INTO ARTIKEL VALUES(30,'Nord-Ost Matjeshering',13,8,'10 - 200 g glasses',25.89E0,10,0,15,0)
INSERT INTO ARTIKEL VALUES(31,'Gorgonzola Telino',14,4,'12 - 100 g pkgs',12.5E0,0,70,20,0)
INSERT INTO ARTIKEL VALUES(32,'Mascarpone Fabioli',14,4,'24 - 200 g pkgs.',32.0E0,9,40,25,0)
INSERT INTO ARTIKEL VALUES(33,'Geitost',15,4,'500 g',2.5E0,112,0,20,0)
INSERT INTO ARTIKEL VALUES(34,'Sasquatch Ale',16,1,'24 - 12 oz bottles',14.0E0,111,0,15,0)
INSERT INTO ARTIKEL VALUES(35,'Steeleye Stout',16,1,'24 - 12 oz bottles',18.0E0,20,0,15,0)
INSERT INTO ARTIKEL VALUES(36,'Inlagd Sill',17,8,'24 - 250 g  jars',19.0E0,112,0,20,0)
INSERT INTO ARTIKEL VALUES(37,'Gravad lax',17,8,'12 - 500 g pkgs.',26.0E0,11,50,25,0)
INSERT INTO ARTIKEL VALUES(38,'C\u00f4te de Blaye',18,1,'12 - 75 cl bottles',263.5E0,17,0,15,0)
INSERT INTO ARTIKEL VALUES(39,'Chartreuse verte',18,1,'750 cc per bottle',18.0E0,69,0,5,0)
INSERT INTO ARTIKEL VALUES(40,'Boston Crab Meat',19,8,'24 - 4 oz tins',18.4E0,123,0,30,0)
INSERT INTO ARTIKEL VALUES(41,'Jack\u00b4s New England Clam Chowder',19,8,'12 - 12 oz cans',9.65E0,85,0,10,0)
INSERT INTO ARTIKEL VALUES(42,'Singaporean Hokkien Fried Mee',20,5,'32 - 1 kg pkgs.',14.0E0,26,0,0,1)
INSERT INTO ARTIKEL VALUES(43,'Ipoh Coffee',20,1,'16 - 500 g tins',46.0E0,17,10,25,0)
INSERT INTO ARTIKEL VALUES(44,'Gula Malacca',20,2,'20 - 2 kg bags',19.45E0,27,0,15,0)
INSERT INTO ARTIKEL VALUES(45,'R\u00f8gede sild',21,8,'1k pkg.',9.5E0,5,70,15,0)
INSERT INTO ARTIKEL VALUES(46,'Spegesild',21,8,'4 - 450 g glasses',12.0E0,95,0,0,0)
INSERT INTO ARTIKEL VALUES(47,'Zaanse koeken',22,3,'10 - 4 oz boxes',9.5E0,36,0,0,0)
INSERT INTO ARTIKEL VALUES(48,'Chocolade',22,3,'10 pkgs.',12.75E0,15,70,25,0)
INSERT INTO ARTIKEL VALUES(49,'Maxilaku',23,3,'24 - 50 g pkgs.',20.0E0,10,60,15,0)
INSERT INTO ARTIKEL VALUES(50,'Valkoinen suklaa',23,3,'12 - 100 g bars',16.25E0,65,0,30,0)
INSERT INTO ARTIKEL VALUES(51,'Manjimup Dried Apples',24,7,'50 - 300 g pkgs.',53.0E0,20,0,10,0)
INSERT INTO ARTIKEL VALUES(52,'Filo Mix',24,5,'16 - 2 kg boxes',7.0E0,38,0,25,0)
INSERT INTO ARTIKEL VALUES(53,'Perth Pasties',24,6,'48 pieces',32.8E0,0,0,0,1)
INSERT INTO ARTIKEL VALUES(54,'Tourti\u00e8re',25,6,'16 pies',7.45E0,21,0,10,0)
INSERT INTO ARTIKEL VALUES(55,'P\u00e2t\u00e9 chinois',25,6,'24 boxes x 2 pies',24.0E0,115,0,20,0)
INSERT INTO ARTIKEL VALUES(56,'Gnocchi di nonna Alice',26,5,'24 - 250 g pkgs.',38.0E0,21,10,30,0)
INSERT INTO ARTIKEL VALUES(57,'Ravioli Angelo',26,5,'24 - 250 g pkgs.',19.5E0,36,0,20,0)
INSERT INTO ARTIKEL VALUES(58,'Escargots de Bourgogne',27,8,'24 pieces',13.25E0,62,0,20,0)
INSERT INTO ARTIKEL VALUES(59,'Raclette Courdavault',28,4,'5 kg pkg.',55.0E0,79,0,0,0)
INSERT INTO ARTIKEL VALUES(60,'Camembert Pierrot',28,4,'15 - 300 g rounds',34.0E0,19,0,0,0)
INSERT INTO ARTIKEL VALUES(61,'Sirop d\u00b4\u00e9rable',29,2,'24 - 500 ml bottles',28.5E0,113,0,25,0)
INSERT INTO ARTIKEL VALUES(62,'Tarte au sucre',29,3,'48 pies',49.3E0,17,0,0,0)
INSERT INTO ARTIKEL VALUES(63,'Vegie-spread',7,2,'15 - 625 g jars',43.9E0,24,0,5,0)
INSERT INTO ARTIKEL VALUES(64,'Wimmers gute Semmelkn\u00f6del',12,5,'20 bags x 4 pieces',33.25E0,22,80,30,0)
INSERT INTO ARTIKEL VALUES(65,'Louisiana Fiery Hot Pepper Sauce',2,2,'32 - 8 oz bottles',21.05E0,76,0,0,0)
INSERT INTO ARTIKEL VALUES(66,'Louisiana Hot Spiced Okra',2,2,'24 - 8 oz jars',17.0E0,4,100,20,0)
INSERT INTO ARTIKEL VALUES(67,'Laughing Lumberjack Lager',16,1,'24 - 12 oz bottles',14.0E0,52,0,10,0)
INSERT INTO ARTIKEL VALUES(68,'Scottish Longbreads',8,3,'10 boxes x 8 pieces',12.5E0,6,10,15,0)
INSERT INTO ARTIKEL VALUES(69,'Gudbrandsdalsost',15,4,'10 kg pkg.',36.0E0,26,0,15,0)
INSERT INTO ARTIKEL VALUES(70,'Outback Lager',7,1,'24 - 355 ml bottles',15.0E0,15,10,30,0)
INSERT INTO ARTIKEL VALUES(71,'Fl\u00f8temysost',15,4,'10 - 500 g pkgs.',21.5E0,26,0,0,0)
INSERT INTO ARTIKEL VALUES(72,'Mozzarella di Giovanni',14,4,'24 - 200 g pkgs.',34.8E0,14,0,0,0)
INSERT INTO ARTIKEL VALUES(73,'R\u00f6d Kaviar',17,8,'24 - 150 g jars',15.0E0,101,0,5,0)
INSERT INTO ARTIKEL VALUES(74,'Longlife Tofu',4,7,'5 kg pkg.',10.0E0,4,20,5,0)
INSERT INTO ARTIKEL VALUES(75,'Rh\u00f6nbr\u00e4u Klosterbier',12,1,'24 - 0.5 l bottles',7.75E0,125,0,25,0)
INSERT INTO ARTIKEL VALUES(76,'Lakkalik\u00f6\u00f6ri',23,1,'500 ml',18.0E0,57,0,20,0)
INSERT INTO ARTIKEL VALUES(77,'Original Frankfurter gr\u00fcne So\u00dfe',12,2,'12 boxes',13.0E0,32,0,15,0)
INSERT INTO ARTIKEL VALUES(4711,'Proxied Article 1',12,4711,'1 Java class',1.3E0,5,0,1,0)
INSERT INTO ARTIKEL VALUES(4712,'Proxied Article 2',12,4711,'1 Java class',1.5E0,2,0,0,0)
INSERT INTO ARTIKEL VALUES(4713,'Proxied Article 3',12,4711,'1 Java class',1.9E0,7,0,5,0)
INSERT INTO BOOKS VALUES(100,'Hamlet',12,5,'12 boxes',34.0E0,32,0,15,0,'1234567890','W. Shakespeare')
INSERT INTO BOOKS VALUES(101,'Faust',12,5,'12 boxes',56.0E0,32,0,15,0,'1234567890','J.W. v. Goethe')
INSERT INTO CDS VALUES(200,'Mama\u00b4s Gun',12,5,'12 boxes',23.0E0,32,0,15,0,'Motown Records','Erykah Badu')
INSERT INTO CDS VALUES(201,'STREETSOUL',12,5,'12 boxes',25.0E0,32,0,15,0,'Virgin Records','Guru\u00b4s Jazzmatazz')
INSERT INTO CDS VALUES(202,'Beyond Skin',12,5,'12 boxes',25.0E0,32,0,15,0,'Outcaste Records','Nitin Sawhney')
INSERT INTO ORDER_POSITION VALUES(1,1,5)
INSERT INTO ORDER_POSITION VALUES(2,1,100)
INSERT INTO ORDER_POSITION VALUES(3,1,200)
INSERT INTO PERSON VALUES(1,'tom','tom')
INSERT INTO PERSON VALUES(2,'bob','bob')
INSERT INTO PERSON VALUES(3,'albert','albert')
INSERT INTO PERSON VALUES(4,'bertrand','bertrand')
INSERT INTO PERSON VALUES(5,'cindy','cindy')
INSERT INTO PERSON VALUES(6,'dorothy','dorothy')
INSERT INTO PERSON VALUES(7,'eugen','eugen')
INSERT INTO PERSON VALUES(8,'frido','frido')
INSERT INTO PERSON VALUES(9,'guido','guido')
INSERT INTO PERSON VALUES(10,'hank%','hank')
INSERT INTO PROJECT VALUES(1,'OJB','OJB')
INSERT INTO PROJECT VALUES(2,'SODA','SODA')
INSERT INTO PROJECT VALUES(3,'HSQLDB','HSQLDB')
INSERT INTO PROJECT VALUES(4,'XERCES','XERCES')
INSERT INTO PROJECT VALUES(5,'Linux','Linux')
INSERT INTO PROJECT VALUES(6,'mySQL','mySQL')
INSERT INTO PERSON_PROJECT VALUES(1,1,'founder')
INSERT INTO PERSON_PROJECT VALUES(1,2,'friend')
INSERT INTO PERSON_PROJECT VALUES(2,1,'developer')
INSERT INTO PERSON_PROJECT VALUES(2,2,'lead')
INSERT INTO PERSON_PROJECT VALUES(2,3,'developer')
INSERT INTO PERSON_PROJECT VALUES(3,2,'tester')
INSERT INTO PERSON_PROJECT VALUES(3,4,'user')
INSERT INTO PERSON_PROJECT VALUES(3,5,'developer')
INSERT INTO PERSON_PROJECT VALUES(4,1,'developer')
INSERT INTO PERSON_PROJECT VALUES(5,2,'tester')
INSERT INTO PERSON_PROJECT VALUES(5,4,'lead')
INSERT INTO PERSON_PROJECT VALUES(7,4,'lead')
INSERT INTO PERSON_PROJECT VALUES(7,5,'founder')
INSERT INTO PERSON_PROJECT VALUES(7,6,'tester')
INSERT INTO TASK VALUES(1,2,1,'Initial Layout')
INSERT INTO TASK VALUES(2,2,1,'Initial Spec')
INSERT INTO TASK VALUES(3,2,2,'Project Cleanup')
INSERT INTO TASK VALUES(4,2,3,'Testing Scripts')
INSERT INTO CONV_REFERER VALUES(1,50,10)
INSERT INTO CONV_REFERER VALUES(2,51,11)
INSERT INTO CONV_REFERER VALUES(3,52,12)
INSERT INTO CONV_REFERED VALUES(50,60)
INSERT INTO CONV_REFERED VALUES(51,61)
INSERT INTO CONV_REFERED VALUES(52,62)
INSERT INTO NEWS VALUES(1,'Healf Care News (NONE)')
INSERT INTO NEWS VALUES(2,'Ferrai for sale (CARS - BUYERS)')
INSERT INTO NEWS VALUES(3,'Brazil World Cup Champion ! (SPORTS)')
INSERT INTO PAPER VALUES(10,'NONE','today','NONE')
INSERT INTO PAPER VALUES(11,'SALES','yesterday','SALES MAN')
INSERT INTO TOPIC VALUES(10,'Buyers','important')
INSERT INTO TOPIC VALUES(11,'Sellers','unimportant')
INSERT INTO TOPIC_EXT VALUES(30,'Buyers_Ext','important','The buyer')
INSERT INTO TOPIC_EXT VALUES(31,'Sellers_Ext','unimportant','The seller')
INSERT INTO CATEGORY VALUES(1,'Cars','The cars category')
INSERT INTO CATEGORY VALUES(2,'Sports',NULL)
INSERT INTO AREA VALUES(20,'Human',NULL)
INSERT INTO AREA VALUES(21,'NotHuman',NULL)
INSERT INTO CONTENT_QUALIFIER VALUES(2,1)
INSERT INTO CONTENT_QUALIFIER VALUES(2,10)
INSERT INTO CONTENT_QUALIFIER VALUES(2,30)
INSERT INTO CONTENT_QUALIFIER VALUES(3,2)
INSERT INTO CONTENT_QUALIFIER VALUES(10,20)
INSERT INTO CONTENT_QUALIFIER VALUES(11,11)
INSERT INTO CONTENT_QUALIFIER VALUES(11,31)
INSERT INTO SM_TAB_MAX_A VALUES(120,'A')
INSERT INTO SM_TAB_MAX_A VALUES(121,'A')
INSERT INTO SM_TAB_MAX_AA VALUES(101,'AA')
INSERT INTO SM_TAB_MAX_AA VALUES(102,'AA')
INSERT INTO SM_TAB_MAX_AB VALUES(99,'AB')
INSERT INTO SM_TAB_MAX_AAA VALUES(123,'AAA')
INSERT INTO SM_TAB_MAX_B VALUES(115,'B')
INSERT INTO SM_TAB_MAX_B VALUES(116,'B')
INSERT INTO SM_TAB_MAX_BB VALUES(130,'BB')
INSERT INTO SM_TAB_MAX_BB VALUES(131,'BB')