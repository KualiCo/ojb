<project name="ojb-blank" default="build" basedir=".">
<!--
/* Copyright [yyyy] [name of copyright owner]
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
-->
    <!--
        This build file is designed so that you can add build/classes, build/resources
        and lib/*.jar to a classpath and run the project.

        The default "build" target will build everything and copy src/resources/*
        over to build/resources. Class files will wind up in build/classes

        The Jar target kindly jars things up for you.

        You will probably want to modify this for your environment, but hopefully
        it will work well for you.

        Also, you will want to customize build.properties
    -->
    <property file="build.properties"/>

    <path id="compile-classpath">
        <fileset dir="${build.lib.dir}">
            <include name="**/*.jar"/>
        </fileset>
    </path>

    <target name="compile">
        <tstamp/>
        <mkdir dir="${build.dir}"/>
        <mkdir dir="${build.classes.dir}"/>
        <javac srcdir="${source.java.dir}" destdir="${build.classes.dir}">
            <classpath refid="compile-classpath"/>
        </javac>
    </target>

    <target name="build" depends="compile">
        <copy todir="${build.resource.dir}/">
            <fileset dir="${source.resource.dir}">
                <include name="*.properties"/>
                <include name="*.dtd"/>
                <include name="repositor*.xml"/>
                <exclude name="build.properties"/>
            </fileset>
            <filterset>
                <filter token="JCD_ALIAS" value="${jcdAlias}"/>
                <filter token="DBMS_NAME" value="${dbmsName}"/>
                <filter token="JDBC_LEVEL" value="${jdbcLevel}"/>
                <filter token="DRIVER_NAME" value="${jdbcRuntimeDriver}"/>
                <filter token="URL_PROTOCOL" value="${urlProtocol}"/>
                <filter token="URL_SUBPROTOCOL" value="${urlSubprotocol}"/>
                <filter token="URL_DBALIAS" value="${urlDbalias}"/>
                <filter token="USER_NAME" value="${databaseUser}"/>
                <filter token="USER_PASSWD" value="${databasePassword}"/>
            </filterset>
        </copy>
    </target>

    <target name="clean">
        <delete dir="target" quiet="true"/>
        <delete dir="build" quiet="true"/>
        <delete file="velocity.log"/>
    </target>

    <target name="jar" depends="build">
        <mkdir dir="${target.dir}"/>
        <jar index="true" jarfile="${target.dir}/${jar.name}">
            <fileset dir="${build.classes.dir}/">
                <include name="**/*.class"/>
            </fileset>
            <fileset dir="${build.resource.dir}">
                <include name="**/*"/>
            </fileset>
        </jar>
    </target>

</project>

