package org.apache.ojb.tools.mapping.reversedb2.propertyEditors;

/* Copyright 2002-2005 The Apache Software Foundation
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

import org.apache.ojb.tools.mapping.reversedb2.ojbmetatreemodel.*;

/**
 * This is an implementation of a PropertyEditor for the Ojb MetaJdbcConnectionDescriptorNode class.
 *
 * @author <a href="mailto:bfl@florianbruckner.com">Florian Bruckner</a>
 * @version $Id: JPnlPropertyEditorOJBMetaJdbcConnectionDescriptor.java,v 1.1 2007-08-24 22:17:29 ewestfal Exp $
 */
public class JPnlPropertyEditorOJBMetaJdbcConnectionDescriptor extends PropertyEditor
{

    /** Creates new form JPnlPropertyEditorOJBMetaJdbcConnectionDescriptor */
    public JPnlPropertyEditorOJBMetaJdbcConnectionDescriptor()
    {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */

    private void initComponents()//GEN-BEGIN:initComponents
    {
        java.awt.GridBagConstraints gridBagConstraints;

        lblDatabaseAlias = new javax.swing.JLabel();
        tfDatabaseAlias = new org.apache.ojb.tools.mapping.reversedb2.propertyEditors.PropertyEditorJTextField();
        lblDBMS = new javax.swing.JLabel();
        tfDBMS = new org.apache.ojb.tools.mapping.reversedb2.propertyEditors.PropertyEditorJTextField();
        lblDatasourceName = new javax.swing.JLabel();
        tfDatasourceName = new org.apache.ojb.tools.mapping.reversedb2.propertyEditors.PropertyEditorJTextField();
        lblDriver = new javax.swing.JLabel();
        tfDriver = new org.apache.ojb.tools.mapping.reversedb2.propertyEditors.PropertyEditorJTextField();
        lblDescriptorKey = new javax.swing.JLabel();
        tfDescriptorKey = new org.apache.ojb.tools.mapping.reversedb2.propertyEditors.PropertyEditorJTextField();
        lblJDBCLevel = new javax.swing.JLabel();
        tfJDBCLevel = new org.apache.ojb.tools.mapping.reversedb2.propertyEditors.PropertyEditorJTextField();
        tfPassword = new org.apache.ojb.tools.mapping.reversedb2.propertyEditors.PropertyEditorJTextField();
        lblPassword = new javax.swing.JLabel();
        lblProtocol = new javax.swing.JLabel();
        tfProtocol = new org.apache.ojb.tools.mapping.reversedb2.propertyEditors.PropertyEditorJTextField();
        lblSubProtocol = new javax.swing.JLabel();
        tfSubProtocol = new org.apache.ojb.tools.mapping.reversedb2.propertyEditors.PropertyEditorJTextField();
        tfUsername = new org.apache.ojb.tools.mapping.reversedb2.propertyEditors.PropertyEditorJTextField();
        lblUsername = new javax.swing.JLabel();

        setLayout(new java.awt.GridBagLayout());

        lblDatabaseAlias.setDisplayedMnemonic('a');
        lblDatabaseAlias.setLabelFor(tfDatabaseAlias);
        lblDatabaseAlias.setText("Database Alias:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        add(lblDatabaseAlias, gridBagConstraints);

        tfDatabaseAlias.setText("jTextField1");
        tfDatabaseAlias.setEditorKey(org.apache.ojb.tools.mapping.reversedb2.ojbmetatreemodel.OjbMetaJdbcConnectionDescriptorNode.ATT_DBALIAS);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
        gridBagConstraints.weightx = 1.0;
        add(tfDatabaseAlias, gridBagConstraints);

        lblDBMS.setDisplayedMnemonic('d');
        lblDBMS.setLabelFor(tfDBMS);
        lblDBMS.setText("DBMS:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        add(lblDBMS, gridBagConstraints);

        tfDBMS.setText("jTextField1");
        tfDBMS.setEditorKey(org.apache.ojb.tools.mapping.reversedb2.ojbmetatreemodel.OjbMetaJdbcConnectionDescriptorNode.ATT_DBMS);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
        gridBagConstraints.weightx = 1.0;
        add(tfDBMS, gridBagConstraints);

        lblDatasourceName.setDisplayedMnemonic('n');
        lblDatasourceName.setLabelFor(tfDatasourceName);
        lblDatasourceName.setText("Datasource Name:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        add(lblDatasourceName, gridBagConstraints);

        tfDatasourceName.setText("jTextField1");
        tfDatasourceName.setEditorKey(org.apache.ojb.tools.mapping.reversedb2.ojbmetatreemodel.OjbMetaJdbcConnectionDescriptorNode.ATT_DATASOURCE_NAME);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
        gridBagConstraints.weightx = 1.0;
        add(tfDatasourceName, gridBagConstraints);

        lblDriver.setDisplayedMnemonic('r');
        lblDriver.setLabelFor(tfDriver);
        lblDriver.setText("Driver:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        add(lblDriver, gridBagConstraints);

        tfDriver.setText("jTextField1");
        tfDriver.setEditorKey(org.apache.ojb.tools.mapping.reversedb2.ojbmetatreemodel.OjbMetaJdbcConnectionDescriptorNode.ATT_DRIVER);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
        gridBagConstraints.weightx = 1.0;
        add(tfDriver, gridBagConstraints);

        lblDescriptorKey.setDisplayedMnemonic('k');
        lblDescriptorKey.setLabelFor(tfDescriptorKey);
        lblDescriptorKey.setText("Descriptor Key:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        add(lblDescriptorKey, gridBagConstraints);

        tfDescriptorKey.setText("jTextField1");
        tfDescriptorKey.setEditorKey(org.apache.ojb.tools.mapping.reversedb2.ojbmetatreemodel.OjbMetaJdbcConnectionDescriptorNode.ATT_DESCRIPTOR_PBKEY);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
        gridBagConstraints.weightx = 1.0;
        add(tfDescriptorKey, gridBagConstraints);

        lblJDBCLevel.setDisplayedMnemonic('J');
        lblJDBCLevel.setLabelFor(tfJDBCLevel);
        lblJDBCLevel.setText("JDBC Level:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        add(lblJDBCLevel, gridBagConstraints);

        tfJDBCLevel.setText("jTextField1");
        tfJDBCLevel.setEditorKey(org.apache.ojb.tools.mapping.reversedb2.ojbmetatreemodel.OjbMetaJdbcConnectionDescriptorNode.ATT_JDBC_LEVEL);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
        gridBagConstraints.weightx = 1.0;
        add(tfJDBCLevel, gridBagConstraints);

        tfPassword.setText("jTextField1");
        tfPassword.setEditorKey(org.apache.ojb.tools.mapping.reversedb2.ojbmetatreemodel.OjbMetaJdbcConnectionDescriptorNode.ATT_PASSWORD);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
        gridBagConstraints.weightx = 1.0;
        add(tfPassword, gridBagConstraints);

        lblPassword.setDisplayedMnemonic('p');
        lblPassword.setLabelFor(tfPassword);
        lblPassword.setText("Password:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        add(lblPassword, gridBagConstraints);

        lblProtocol.setDisplayedMnemonic('o');
        lblProtocol.setLabelFor(tfProtocol);
        lblProtocol.setText("Protocol:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        add(lblProtocol, gridBagConstraints);

        tfProtocol.setText("jTextField1");
        tfProtocol.setEditorKey(org.apache.ojb.tools.mapping.reversedb2.ojbmetatreemodel.OjbMetaJdbcConnectionDescriptorNode.ATT_PROTOCOL);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
        gridBagConstraints.weightx = 1.0;
        add(tfProtocol, gridBagConstraints);

        lblSubProtocol.setDisplayedMnemonic('s');
        lblSubProtocol.setLabelFor(tfSubProtocol);
        lblSubProtocol.setText("Sub Protocol:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        add(lblSubProtocol, gridBagConstraints);

        tfSubProtocol.setText("jTextField1");
        tfSubProtocol.setEditorKey(org.apache.ojb.tools.mapping.reversedb2.ojbmetatreemodel.OjbMetaJdbcConnectionDescriptorNode.ATT_SUBPROTOCOL);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
        gridBagConstraints.weightx = 1.0;
        add(tfSubProtocol, gridBagConstraints);

        tfUsername.setText("jTextField1");
        tfUsername.setEditorKey(org.apache.ojb.tools.mapping.reversedb2.ojbmetatreemodel.OjbMetaJdbcConnectionDescriptorNode.ATT_USERNAME);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        add(tfUsername, gridBagConstraints);

        lblUsername.setDisplayedMnemonic('m');
        lblUsername.setLabelFor(tfUsername);
        lblUsername.setText("Username:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weighty = 1.0;
        add(lblUsername, gridBagConstraints);

    }//GEN-END:initComponents

    public void setEditorTarget (PropertyEditorTarget target)
    {
        if (target instanceof OjbMetaJdbcConnectionDescriptorNode)
        {
            super.setEditorTarget(target);
        }
        else
        {
            throw new UnsupportedOperationException("This editor can only edit OjbMetaJdbcConnectionDescriptorNode objects");
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private org.apache.ojb.tools.mapping.reversedb2.propertyEditors.PropertyEditorJTextField tfProtocol;
    private javax.swing.JLabel lblDriver;
    private org.apache.ojb.tools.mapping.reversedb2.propertyEditors.PropertyEditorJTextField tfJDBCLevel;
    private javax.swing.JLabel lblDBMS;
    private javax.swing.JLabel lblDatabaseAlias;
    private javax.swing.JLabel lblProtocol;
    private javax.swing.JLabel lblUsername;
    private org.apache.ojb.tools.mapping.reversedb2.propertyEditors.PropertyEditorJTextField tfDBMS;
    private org.apache.ojb.tools.mapping.reversedb2.propertyEditors.PropertyEditorJTextField tfDatasourceName;
    private javax.swing.JLabel lblDatasourceName;
    private javax.swing.JLabel lblJDBCLevel;
    private org.apache.ojb.tools.mapping.reversedb2.propertyEditors.PropertyEditorJTextField tfUsername;
    private org.apache.ojb.tools.mapping.reversedb2.propertyEditors.PropertyEditorJTextField tfDescriptorKey;
    private org.apache.ojb.tools.mapping.reversedb2.propertyEditors.PropertyEditorJTextField tfSubProtocol;
    private javax.swing.JLabel lblSubProtocol;
    private org.apache.ojb.tools.mapping.reversedb2.propertyEditors.PropertyEditorJTextField tfPassword;
    private javax.swing.JLabel lblPassword;
    private org.apache.ojb.tools.mapping.reversedb2.propertyEditors.PropertyEditorJTextField tfDatabaseAlias;
    private javax.swing.JLabel lblDescriptorKey;
    private org.apache.ojb.tools.mapping.reversedb2.propertyEditors.PropertyEditorJTextField tfDriver;
    // End of variables declaration//GEN-END:variables

}
