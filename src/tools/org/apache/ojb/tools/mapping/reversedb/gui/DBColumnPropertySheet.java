package org.apache.ojb.tools.mapping.reversedb.gui;

/* Copyright 2002-2005 The Apache Software Foundation
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import java.awt.event.KeyEvent;

import org.apache.ojb.tools.mapping.reversedb.Utilities;

/**
 *
 * @author <a href="mailto:bfl@florianbruckner.com">Florian Bruckner</a> 
 * @version $Id: DBColumnPropertySheet.java,v 1.1 2007-08-24 22:17:32 ewestfal Exp $
 */
public class DBColumnPropertySheet extends javax.swing.JPanel
  implements PropertySheetView
{
    org.apache.ojb.tools.mapping.reversedb.DBColumn aColumn;
  /** Creates new form DBCatalogPropertySheet */
  public DBColumnPropertySheet ()
  {
    initComponents ();
  }
  
  private void readValuesFromColumn()
  {
    this.tfColumnName.setText(aColumn.getColumnName());
    this.cbEnabled.setSelected(aColumn.isEnabled());
    this.cbDisabledByParent.setSelected(!aColumn.getDBTable().isTreeEnabled());
    this.cmbSQLType.setSelectedItem(org.apache.ojb.tools.mapping.reversedb.Utilities.hmJDBCTypeToName.get(new Integer(aColumn.getColumnType())));
    this.tfSQLTypeName.setText(aColumn.getColumnTypeName ());
    this.tfJavaFieldName.setText(aColumn.getJavaFieldName());
    this.cmbJavaType.setSelectedItem(aColumn.getJavaFieldType());
  }
  
  /** This method is called from within the constructor to
   * initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is
   * always regenerated by the Form Editor.
   */
    private void initComponents()//GEN-BEGIN:initComponents
    {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel1 = new javax.swing.JPanel();
        lblEnabled = new javax.swing.JLabel();
        cbEnabled = new javax.swing.JCheckBox();
        lblDisabledByParent = new javax.swing.JLabel();
        cbDisabledByParent = new javax.swing.JCheckBox();
        jLabel4 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        lblColumnName = new javax.swing.JLabel();
        tfColumnName = new javax.swing.JTextField();
        lblJavaFieldName = new javax.swing.JLabel();
        tfJavaFieldName = new javax.swing.JTextField();
        lblSQLTypeName = new javax.swing.JLabel();
        tfSQLTypeName = new javax.swing.JTextField();
        lblSQLType = new javax.swing.JLabel();
        cmbSQLType = new javax.swing.JComboBox();
        lblJavaType = new javax.swing.JLabel();
        cmbJavaType = new javax.swing.JComboBox();

        setLayout(new java.awt.GridBagLayout());

        addComponentListener(new java.awt.event.ComponentAdapter()
        {
            public void componentShown(java.awt.event.ComponentEvent evt)
            {
                formComponentShown(evt);
            }
            public void componentHidden(java.awt.event.ComponentEvent evt)
            {
                formComponentHidden(evt);
            }
        });

        addHierarchyListener(new java.awt.event.HierarchyListener()
        {
            public void hierarchyChanged(java.awt.event.HierarchyEvent evt)
            {
                formHierarchyChanged(evt);
            }
        });

        jPanel1.setLayout(new java.awt.GridLayout(8, 2));

        lblEnabled.setDisplayedMnemonic('e');
        lblEnabled.setText("enabled:");
        jPanel1.add(lblEnabled);

        cbEnabled.setMnemonic('e');
        cbEnabled.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                cbEnabledActionPerformed(evt);
            }
        });

        jPanel1.add(cbEnabled);

        lblDisabledByParent.setText("disabled by Parent:");
        jPanel1.add(lblDisabledByParent);

        cbDisabledByParent.setMnemonic('d');
        cbDisabledByParent.setEnabled(false);
        jPanel1.add(cbDisabledByParent);

        jPanel1.add(jLabel4);

        jPanel1.add(jLabel3);

        lblColumnName.setLabelFor(tfColumnName);
        lblColumnName.setText("Column Name:");
        jPanel1.add(lblColumnName);

        tfColumnName.setEditable(false);
        tfColumnName.setText("jTextField1");
        tfColumnName.setBorder(null);
        tfColumnName.setDisabledTextColor((java.awt.Color) javax.swing.UIManager.getDefaults().get("windowText"));
        tfColumnName.setEnabled(false);
        jPanel1.add(tfColumnName);

        lblJavaFieldName.setLabelFor(tfColumnName);
        lblJavaFieldName.setText("Java Field Name:");
        jPanel1.add(lblJavaFieldName);

        tfJavaFieldName.setText("jTextField1");
        tfJavaFieldName.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                tfJavaFieldNameActionPerformed(evt);
            }
        });

        tfJavaFieldName.addFocusListener(new java.awt.event.FocusAdapter()
        {
            public void focusLost(java.awt.event.FocusEvent evt)
            {
                tfJavaFieldNameFocusLost(evt);
            }
        });

        tfJavaFieldName.addKeyListener(new java.awt.event.KeyAdapter()
        {
            public void keyTyped(java.awt.event.KeyEvent evt)
            {
                tfJavaFieldNameKeyTyped(evt);
            }
        });

        jPanel1.add(tfJavaFieldName);

        lblSQLTypeName.setLabelFor(tfColumnName);
        lblSQLTypeName.setText("SQL Type Name:");
        jPanel1.add(lblSQLTypeName);

        tfSQLTypeName.setEditable(false);
        tfSQLTypeName.setText("jTextField1");
        tfSQLTypeName.setBorder(null);
        tfSQLTypeName.setDisabledTextColor((java.awt.Color) javax.swing.UIManager.getDefaults().get("windowText"));
        tfSQLTypeName.setEnabled(false);
        jPanel1.add(tfSQLTypeName);

        lblSQLType.setText("Java SQL Type:");
        jPanel1.add(lblSQLType);

        cmbSQLType.setModel(new javax.swing.DefaultComboBoxModel(Utilities.vJDBCTypeNames));
        cmbSQLType.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                cmbSQLTypeActionPerformed(evt);
            }
        });

        jPanel1.add(cmbSQLType);

        lblJavaType.setText("Java Type:");
        jPanel1.add(lblJavaType);

        cmbJavaType.setEditable(true);
        cmbJavaType.setModel( new org.apache.ojb.tools.swing.SortingComboBoxModel(Utilities.vJavaTypes)
            /*new javax.swing.DefaultComboBoxModel(at.citec.ojb.schemegenerator.Utilities.vJavaTypes)*/);
        cmbJavaType.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                cmbJavaTypeActionPerformed(evt);
            }
        });

        jPanel1.add(cmbJavaType);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        add(jPanel1, gridBagConstraints);

    }//GEN-END:initComponents

    private void tfJavaFieldNameKeyTyped(java.awt.event.KeyEvent evt)//GEN-FIRST:event_tfJavaFieldNameKeyTyped
    {//GEN-HEADEREND:event_tfJavaFieldNameKeyTyped
        // Revert to original value if ESC is pressed.
        if (evt.getKeyChar() == KeyEvent.VK_ESCAPE)
        {
            this.tfJavaFieldName.setText(aColumn.getJavaFieldName());
        }
    }//GEN-LAST:event_tfJavaFieldNameKeyTyped

    private void tfJavaFieldNameFocusLost(java.awt.event.FocusEvent evt)//GEN-FIRST:event_tfJavaFieldNameFocusLost
    {//GEN-HEADEREND:event_tfJavaFieldNameFocusLost
        // Commit the new value to the column if the focus is lost
        aColumn.setJavaFieldName(tfJavaFieldName.getText());        
    }//GEN-LAST:event_tfJavaFieldNameFocusLost

    private void tfJavaFieldNameActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_tfJavaFieldNameActionPerformed
    {//GEN-HEADEREND:event_tfJavaFieldNameActionPerformed
        // Commit value to column object if ENTER is pressed
        aColumn.setJavaFieldName(tfJavaFieldName.getText());
    }//GEN-LAST:event_tfJavaFieldNameActionPerformed

  private void cmbJavaTypeActionPerformed (java.awt.event.ActionEvent evt)//GEN-FIRST:event_cmbJavaTypeActionPerformed
  {//GEN-HEADEREND:event_cmbJavaTypeActionPerformed
    // Add your handling code here:
    aColumn.setJavaFieldType(cmbJavaType.getSelectedItem().toString());
    if (cmbJavaType.getModel() instanceof org.apache.ojb.tools.swing.SortingComboBoxModel)
    {
      org.apache.ojb.tools.swing.SortingComboBoxModel cmbModel = 
        (org.apache.ojb.tools.swing.SortingComboBoxModel)this.cmbJavaType.getModel();
      if (cmbModel.getIndexOf(cmbJavaType.getSelectedItem()) == -1 )
        cmbJavaType.addItem(cmbJavaType.getSelectedItem());
    }
    else if (cmbJavaType.getModel() instanceof javax.swing.DefaultComboBoxModel)
    {
      javax.swing.DefaultComboBoxModel cmbModel = 
        (javax.swing.DefaultComboBoxModel)this.cmbJavaType.getModel();
      if (cmbModel.getIndexOf(cmbJavaType.getSelectedItem()) == -1 )
        cmbJavaType.addItem(cmbJavaType.getSelectedItem());      
    }
  }//GEN-LAST:event_cmbJavaTypeActionPerformed

  private void cbEnabledActionPerformed (java.awt.event.ActionEvent evt)//GEN-FIRST:event_cbEnabledActionPerformed
  {//GEN-HEADEREND:event_cbEnabledActionPerformed
    // Add your handling code here:
    this.aColumn.setEnabled(this.cbEnabled.isSelected());
  }//GEN-LAST:event_cbEnabledActionPerformed

  private void cmbSQLTypeActionPerformed (java.awt.event.ActionEvent evt)//GEN-FIRST:event_cmbSQLTypeActionPerformed
  {//GEN-HEADEREND:event_cmbSQLTypeActionPerformed
    // Add your handling code here:
//    System.out.println(this.jComboBox1.getSelectedItem());
    aColumn.setColumnType(this.cmbSQLType.getSelectedItem().toString());
  }//GEN-LAST:event_cmbSQLTypeActionPerformed

  private void formHierarchyChanged (java.awt.event.HierarchyEvent evt)//GEN-FIRST:event_formHierarchyChanged
  {//GEN-HEADEREND:event_formHierarchyChanged
    // Add your handling code here:
    readValuesFromColumn();    
  }//GEN-LAST:event_formHierarchyChanged

  private void formComponentHidden (java.awt.event.ComponentEvent evt)//GEN-FIRST:event_formComponentHidden
  {//GEN-HEADEREND:event_formComponentHidden
    // Add your handling code here:
  }//GEN-LAST:event_formComponentHidden

  private void formComponentShown (java.awt.event.ComponentEvent evt)//GEN-FIRST:event_formComponentShown
  {//GEN-HEADEREND:event_formComponentShown
    // Add your handling code here:
  }//GEN-LAST:event_formComponentShown

  public void setModel (PropertySheetModel pm)
  {
    if (pm instanceof org.apache.ojb.tools.mapping.reversedb.DBColumn)
    {
      this.aColumn = (org.apache.ojb.tools.mapping.reversedb.DBColumn)pm;
      this.readValuesFromColumn();
    }
    else
      throw new IllegalArgumentException();    
  }  
  
  
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel lblSQLTypeName;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JComboBox cmbSQLType;
    private javax.swing.JLabel lblJavaType;
    private javax.swing.JLabel lblEnabled;
    private javax.swing.JCheckBox cbEnabled;
    private javax.swing.JTextField tfJavaFieldName;
    private javax.swing.JCheckBox cbDisabledByParent;
    private javax.swing.JTextField tfColumnName;
    private javax.swing.JLabel lblDisabledByParent;
    private javax.swing.JLabel lblColumnName;
    private javax.swing.JComboBox cmbJavaType;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lblJavaFieldName;
    private javax.swing.JLabel lblSQLType;
    private javax.swing.JTextField tfSQLTypeName;
    // End of variables declaration//GEN-END:variables
  
}


/***************************** Changelog *****************************
// $Log: not supported by cvs2svn $
// Revision 1.1.2.1  2005/12/21 22:32:02  tomdz
// Updated license
//
// Revision 1.1  2004/05/05 16:38:49  arminw
// fix fault
// wrong package structure used:
// org.apache.ojb.tools.reversdb
// org.apache.ojb.tools.reversdb2
//
// instead of
// org.apache.ojb.tools.mapping.reversdb
// org.apache.ojb.tools.mapping.reversdb2
//
// Revision 1.1  2004/05/04 13:44:59  arminw
// move reverseDB stuff
//
// Revision 1.9  2004/04/05 12:16:23  tomdz
// Fixed/updated license in files leftover from automatic license transition
//
// Revision 1.8  2004/04/04 23:53:42  brianm
// Fixed initial copyright dates to match cvs repository
//
// Revision 1.7  2004/03/11 18:16:22  brianm
// ASL 2.0
//
// Revision 1.6  2003/06/21 10:21:55  florianbruckner
// update netbeans 3.4 -> 3.5; XML and code genration changed a bit
//
// Revision 1.5  2003/06/07 10:11:50  brj
// some style fixes
//
// Revision 1.4  2003/02/21 12:47:03  florianbruckner
// corrected event handling of JInputField objects, value of field was
// not written back to the model object.
//
// Revision 1.3  2002/06/18 12:26:41  florianbruckner
// changes in Netbeans Form definitions after move to jakarta.
//
// Revision 1.2  2002/06/17 19:34:34  jvanzyl
// Correcting all the package references.
// PR:
// Obtained from:
// Submitted by:
// Reviewed by:
//
// Revision 1.1.1.1  2002/06/17 18:16:52  jvanzyl
// Initial OJB import
//
// Revision 1.2  2002/05/16 11:47:09  florianbruckner
// fix CR/LF issue, change license to ASL
//
// Revision 1.1  2002/04/18 11:44:16  mpoeschl
//
// move files to new location
//
// Revision 1.4  2002/04/07 09:05:17  thma
// *** empty log message ***
//
// Revision 1.3  2002/03/11 18:40:26  florianbruckner
// modify .form files so the use the correct package name
//
// Revision 1.2  2002/03/11 17:36:26  florianbruckner
// fix line break issue for these files that were previously checked in with -kb
//
// Revision 1.1  2002/03/04 17:19:32  thma
// initial checking for Florians Reverse engineering tool
//
// Revision 1.1.1.1  2002/02/20 13:35:25  Administrator
// initial import
//
/***************************** Changelog *****************************/
