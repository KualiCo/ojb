package org.apache.ojb.tools.mapping.reversedb.gui;

import java.awt.event.KeyEvent;

/* Copyright 2002-2005 The Apache Software Foundation
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 *
 * @author <a href="mailto:bfl@florianbruckner.com">Florian Bruckner</a> 
 * @version $Id: DBTablePropertySheet.java,v 1.1 2007-08-24 22:17:32 ewestfal Exp $
 */
public class DBTablePropertySheet extends javax.swing.JPanel
  implements PropertySheetView
{
    org.apache.ojb.tools.mapping.reversedb.DBTable aTable;
  /** Creates new form DBCatalogPropertySheet */
  public DBTablePropertySheet ()
  {
    initComponents ();
  }
  
  private void readValuesFromTable()
  {
    this.cbEnabled.setSelected(aTable.isEnabled());
    this.cbDisabledByParent.setSelected(!aTable.getDBSchema().isTreeEnabled ());
    this.tfTableName.setText(aTable.getTableName());
    this.tfClassName.setText(aTable.getClassName());
    this.tfPackageName.setText(aTable.getPackageName());
    this.cbDynamicProxy.setSelected(aTable.hasDynamicProxy());
    this.tfConversionStrategyClass.setText(aTable.getConversionStrategyClass());
  }
  
  /** This method is called from within the constructor to
   * initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is
   * always regenerated by the Form Editor.
   */
    private void initComponents()//GEN-BEGIN:initComponents
    {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel1 = new javax.swing.JPanel();
        lblEnabled = new javax.swing.JLabel();
        cbEnabled = new javax.swing.JCheckBox();
        lblDisabledByParent = new javax.swing.JLabel();
        cbDisabledByParent = new javax.swing.JCheckBox();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        lblTableName = new javax.swing.JLabel();
        tfTableName = new javax.swing.JTextField();
        lblClassName = new javax.swing.JLabel();
        tfClassName = new javax.swing.JTextField();
        lblPackageName = new javax.swing.JLabel();
        tfPackageName = new javax.swing.JTextField();
        lblDynamicProxy = new javax.swing.JLabel();
        cbDynamicProxy = new javax.swing.JCheckBox();
        lblConversionStrategyClass = new javax.swing.JLabel();
        tfConversionStrategyClass = new javax.swing.JTextField();

        setLayout(new java.awt.GridBagLayout());

        addComponentListener(new java.awt.event.ComponentAdapter()
        {
            public void componentShown(java.awt.event.ComponentEvent evt)
            {
                formComponentShown(evt);
            }
            public void componentHidden(java.awt.event.ComponentEvent evt)
            {
                formComponentHidden(evt);
            }
        });

        addHierarchyListener(new java.awt.event.HierarchyListener()
        {
            public void hierarchyChanged(java.awt.event.HierarchyEvent evt)
            {
                formHierarchyChanged(evt);
            }
        });

        jPanel1.setLayout(new java.awt.GridLayout(8, 2));

        lblEnabled.setDisplayedMnemonic('e');
        lblEnabled.setText("enabled");
        jPanel1.add(lblEnabled);

        cbEnabled.setMnemonic('e');
        cbEnabled.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                cbEnabledActionPerformed(evt);
            }
        });

        jPanel1.add(cbEnabled);

        lblDisabledByParent.setText("disabled by Parent:");
        jPanel1.add(lblDisabledByParent);

        cbDisabledByParent.setEnabled(false);
        jPanel1.add(cbDisabledByParent);

        jPanel1.add(jLabel3);

        jPanel1.add(jLabel4);

        lblTableName.setLabelFor(tfTableName);
        lblTableName.setText("Table Name:");
        jPanel1.add(lblTableName);

        tfTableName.setEditable(false);
        tfTableName.setText("jTextField1");
        tfTableName.setBorder(null);
        tfTableName.setDisabledTextColor(new java.awt.Color(0, 51, 51));
        tfTableName.setEnabled(false);
        jPanel1.add(tfTableName);

        lblClassName.setDisplayedMnemonic('c');
        lblClassName.setLabelFor(tfClassName);
        lblClassName.setText("Class Name:");
        jPanel1.add(lblClassName);

        tfClassName.setText("jTextField1");
        tfClassName.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                tfClassNameActionPerformed(evt);
            }
        });

        tfClassName.addFocusListener(new java.awt.event.FocusAdapter()
        {
            public void focusLost(java.awt.event.FocusEvent evt)
            {
                tfClassNameFocusLost(evt);
            }
        });

        tfClassName.addKeyListener(new java.awt.event.KeyAdapter()
        {
            public void keyTyped(java.awt.event.KeyEvent evt)
            {
                tfClassNameKeyTyped(evt);
            }
        });

        jPanel1.add(tfClassName);

        lblPackageName.setDisplayedMnemonic('p');
        lblPackageName.setLabelFor(tfPackageName);
        lblPackageName.setText("Package:");
        jPanel1.add(lblPackageName);

        tfPackageName.setText("jTextField2");
        tfPackageName.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                tfPackageNameActionPerformed(evt);
            }
        });

        tfPackageName.addFocusListener(new java.awt.event.FocusAdapter()
        {
            public void focusLost(java.awt.event.FocusEvent evt)
            {
                tfPackageNameFocusLost(evt);
            }
        });

        tfPackageName.addKeyListener(new java.awt.event.KeyAdapter()
        {
            public void keyTyped(java.awt.event.KeyEvent evt)
            {
                tfPackageNameKeyTyped(evt);
            }
        });

        jPanel1.add(tfPackageName);

        lblDynamicProxy.setDisplayedMnemonic('u');
        lblDynamicProxy.setText("Use Dynamic Proxy:");
        jPanel1.add(lblDynamicProxy);

        cbDynamicProxy.setMnemonic('u');
        cbDynamicProxy.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                cbDynamicProxyActionPerformed(evt);
            }
        });

        jPanel1.add(cbDynamicProxy);

        lblConversionStrategyClass.setDisplayedMnemonic('s');
        lblConversionStrategyClass.setLabelFor(tfConversionStrategyClass);
        lblConversionStrategyClass.setText("Conversion Strategy Class:");
        jPanel1.add(lblConversionStrategyClass);

        tfConversionStrategyClass.setText("jTextField1");
        tfConversionStrategyClass.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                tfConversionStrategyClassActionPerformed(evt);
            }
        });

        tfConversionStrategyClass.addFocusListener(new java.awt.event.FocusAdapter()
        {
            public void focusLost(java.awt.event.FocusEvent evt)
            {
                tfConversionStrategyClassFocusLost(evt);
            }
        });

        tfConversionStrategyClass.addKeyListener(new java.awt.event.KeyAdapter()
        {
            public void keyTyped(java.awt.event.KeyEvent evt)
            {
                tfConversionStrategyClassKeyTyped(evt);
            }
        });

        jPanel1.add(tfConversionStrategyClass);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        add(jPanel1, gridBagConstraints);

    }//GEN-END:initComponents

    private void tfConversionStrategyClassKeyTyped(java.awt.event.KeyEvent evt)//GEN-FIRST:event_tfConversionStrategyClassKeyTyped
    {//GEN-HEADEREND:event_tfConversionStrategyClassKeyTyped
        // Revert on ESC
        if (evt.getKeyChar() == KeyEvent.VK_ESCAPE)
        {
            this.tfConversionStrategyClass.setText(aTable.getConversionStrategyClass());
        }
    }//GEN-LAST:event_tfConversionStrategyClassKeyTyped

    private void tfConversionStrategyClassFocusLost(java.awt.event.FocusEvent evt)//GEN-FIRST:event_tfConversionStrategyClassFocusLost
    {//GEN-HEADEREND:event_tfConversionStrategyClassFocusLost
        // Commit on lost focus
        aTable.setConversionStrategyClass(this.tfConversionStrategyClass.getText());
    }//GEN-LAST:event_tfConversionStrategyClassFocusLost

    private void tfConversionStrategyClassActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_tfConversionStrategyClassActionPerformed
    {//GEN-HEADEREND:event_tfConversionStrategyClassActionPerformed
        // Commit on ENTER
        aTable.setConversionStrategyClass(this.tfConversionStrategyClass.getText());
    }//GEN-LAST:event_tfConversionStrategyClassActionPerformed

    private void tfPackageNameKeyTyped(java.awt.event.KeyEvent evt)//GEN-FIRST:event_tfPackageNameKeyTyped
    {//GEN-HEADEREND:event_tfPackageNameKeyTyped
        // Revert on ESC
        if (evt.getKeyChar() == KeyEvent.VK_ESCAPE)
        {
            this.tfPackageName.setText(aTable.getPackageName());
        }
    }//GEN-LAST:event_tfPackageNameKeyTyped

    private void tfPackageNameFocusLost(java.awt.event.FocusEvent evt)//GEN-FIRST:event_tfPackageNameFocusLost
    {//GEN-HEADEREND:event_tfPackageNameFocusLost
        // Commit on lost focus
        aTable.setPackageName(tfPackageName.getText());
    }//GEN-LAST:event_tfPackageNameFocusLost

    private void tfPackageNameActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_tfPackageNameActionPerformed
    {//GEN-HEADEREND:event_tfPackageNameActionPerformed
        // Commit on ENTER
        aTable.setPackageName(tfPackageName.getText());
    }//GEN-LAST:event_tfPackageNameActionPerformed

    private void tfClassNameKeyTyped(java.awt.event.KeyEvent evt)//GEN-FIRST:event_tfClassNameKeyTyped
    {//GEN-HEADEREND:event_tfClassNameKeyTyped
        // Revert on ESC
        if (evt.getKeyChar() == KeyEvent.VK_ESCAPE)
        {
            this.tfClassName.setText(aTable.getClassName());
        }
    }//GEN-LAST:event_tfClassNameKeyTyped

    private void tfClassNameFocusLost(java.awt.event.FocusEvent evt)//GEN-FIRST:event_tfClassNameFocusLost
    {//GEN-HEADEREND:event_tfClassNameFocusLost
        // Commit on lost focus
        aTable.setClassName(tfClassName.getText());
    }//GEN-LAST:event_tfClassNameFocusLost

    private void tfClassNameActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_tfClassNameActionPerformed
    {//GEN-HEADEREND:event_tfClassNameActionPerformed
        // Commit on ENTER
        aTable.setClassName(tfClassName.getText());
    }//GEN-LAST:event_tfClassNameActionPerformed

  private void cbDynamicProxyActionPerformed (java.awt.event.ActionEvent evt)//GEN-FIRST:event_cbDynamicProxyActionPerformed
  {//GEN-HEADEREND:event_cbDynamicProxyActionPerformed
    // Add your handling code here:
    aTable.setDynamicProxy(this.cbDynamicProxy.isSelected());
  }//GEN-LAST:event_cbDynamicProxyActionPerformed

  private void cbEnabledActionPerformed (java.awt.event.ActionEvent evt)//GEN-FIRST:event_cbEnabledActionPerformed
  {//GEN-HEADEREND:event_cbEnabledActionPerformed
    // Add your handling code here:
    this.aTable.setEnabled(this.cbEnabled.isSelected());
  }//GEN-LAST:event_cbEnabledActionPerformed

  private void formHierarchyChanged (java.awt.event.HierarchyEvent evt)//GEN-FIRST:event_formHierarchyChanged
  {//GEN-HEADEREND:event_formHierarchyChanged
    // Add your handling code here:
    readValuesFromTable();    
  }//GEN-LAST:event_formHierarchyChanged

  private void formComponentHidden (java.awt.event.ComponentEvent evt)//GEN-FIRST:event_formComponentHidden
  {//GEN-HEADEREND:event_formComponentHidden
    // Add your handling code here:
  }//GEN-LAST:event_formComponentHidden

  private void formComponentShown (java.awt.event.ComponentEvent evt)//GEN-FIRST:event_formComponentShown
  {//GEN-HEADEREND:event_formComponentShown
    // Add your handling code here:
  }//GEN-LAST:event_formComponentShown

  public void setModel (PropertySheetModel pm)
  {
    if (pm instanceof org.apache.ojb.tools.mapping.reversedb.DBTable)
    {
      this.aTable = (org.apache.ojb.tools.mapping.reversedb.DBTable)pm;
      this.readValuesFromTable();
    }
    else
      throw new IllegalArgumentException();        
  }  
  
  
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel lblConversionStrategyClass;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel lblClassName;
    private javax.swing.JLabel lblTableName;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel lblEnabled;
    private javax.swing.JCheckBox cbEnabled;
    private javax.swing.JCheckBox cbDisabledByParent;
    private javax.swing.JTextField tfConversionStrategyClass;
    private javax.swing.JCheckBox cbDynamicProxy;
    private javax.swing.JTextField tfTableName;
    private javax.swing.JTextField tfPackageName;
    private javax.swing.JLabel lblDisabledByParent;
    private javax.swing.JTextField tfClassName;
    private javax.swing.JLabel lblPackageName;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lblDynamicProxy;
    // End of variables declaration//GEN-END:variables
  
}

/***************************** Changelog *****************************
// $Log: not supported by cvs2svn $
// Revision 1.1.2.1  2005/12/21 22:32:02  tomdz
// Updated license
//
// Revision 1.1  2004/05/05 16:38:49  arminw
// fix fault
// wrong package structure used:
// org.apache.ojb.tools.reversdb
// org.apache.ojb.tools.reversdb2
//
// instead of
// org.apache.ojb.tools.mapping.reversdb
// org.apache.ojb.tools.mapping.reversdb2
//
// Revision 1.1  2004/05/04 13:44:59  arminw
// move reverseDB stuff
//
// Revision 1.9  2004/04/05 12:16:23  tomdz
// Fixed/updated license in files leftover from automatic license transition
//
// Revision 1.8  2004/04/04 23:53:42  brianm
// Fixed initial copyright dates to match cvs repository
//
// Revision 1.7  2004/03/11 18:16:22  brianm
// ASL 2.0
//
// Revision 1.6  2003/06/21 10:21:55  florianbruckner
// update netbeans 3.4 -> 3.5; XML and code genration changed a bit
//
// Revision 1.5  2003/06/07 10:11:50  brj
// some style fixes
//
// Revision 1.4  2003/02/21 12:48:07  florianbruckner
// corrected event handling of JInputField objects, value of field was
// not written back to the model object.
//
// Revision 1.3  2002/06/18 12:26:41  florianbruckner
// changes in Netbeans Form definitions after move to jakarta.
//
// Revision 1.2  2002/06/17 19:34:34  jvanzyl
// Correcting all the package references.
// PR:
// Obtained from:
// Submitted by:
// Reviewed by:
//
// Revision 1.1.1.1  2002/06/17 18:16:54  jvanzyl
// Initial OJB import
//
// Revision 1.2  2002/05/16 11:47:09  florianbruckner
// fix CR/LF issue, change license to ASL
//
// Revision 1.1  2002/04/18 11:44:16  mpoeschl
//
// move files to new location
//
// Revision 1.3  2002/04/07 09:05:17  thma
// *** empty log message ***
//
// Revision 1.2  2002/03/11 17:36:26  florianbruckner
// fix line break issue for these files that were previously checked in with -kb
//
// Revision 1.1  2002/03/04 17:19:32  thma
// initial checking for Florians Reverse engineering tool
//
// Revision 1.1.1.1  2002/02/20 13:35:25  Administrator
// initial import
//
/***************************** Changelog *****************************/
 
